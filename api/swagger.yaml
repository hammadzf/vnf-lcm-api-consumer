openapi: 3.0.2
info:
  title: SOL003 - VNF Lifecycle Management interface
  description: "SOL003 - VNF Lifecycle Management interface\n\nIMPORTANT: Please note\
    \ that this file might be not aligned to the current\nversion of the ETSI Group\
    \ Specification it refers to. In case of\ndiscrepancies the published ETSI Group\
    \ Specification takes precedence.\n\nPlease report bugs to https://forge.etsi.org/rep/nfv/SOL002-SOL003/issues\n"
  contact:
    name: NFV-SOL WG
  license:
    name: ETSI Forge copyright notice
    url: https://forge.etsi.org/etsi-forge-copyright-notice.txt
  version: 2.0.0-impl:etsi.org:ETSI_NFV_OpenAPI:1
externalDocs:
  description: ETSI GS NFV-SOL 003 V3.3.1
  url: https://www.etsi.org/deliver/etsi_gs/NFV-SOL/001_099/003/03.03.01_60/gs_NFV-SOL003v030301p.pdf
servers:
- url: http://127.0.0.1/vnf-lcm-emulator/
- url: https://127.0.0.1/vnf-lcm-emulator/
paths:
  /emulator/vnfds:
    get:
      tags:
      - Management
      operationId: emulator_vnfds
      parameters:
      - name: vnfdSpecification
        in: query
        description: SOL Specification the VNF Descriptor must be in compliance with
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: SOL006
          enum:
          - SOL001
          - SOL006
      responses:
        "200":
          description: This method retrieves all VNF Descriptors
          content:
            application/zip:
              schema:
                type: string
                format: binary
                x-content-type: application/zip
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.management_controller
  /emulator/vnfds/{vnfdId}:
    get:
      tags:
      - Management
      operationId: emulator_vnfds_vnfd_id_get
      parameters:
      - name: vnfdId
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: vnfdSpecification
        in: query
        description: SOL Specification the VNF Descriptor must be in compliance with
        required: true
        style: form
        explode: true
        schema:
          type: string
          default: SOL006
          enum:
          - SOL001
          - SOL006
      responses:
        "200":
          description: It retrieves a specific VNF Descriptor
          content:
            application/zip:
              schema:
                type: string
                format: binary
                x-content-type: application/zip
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.management_controller
  /emulator/notifications:
    post:
      tags:
      - Management
      operationId: emulator_notifications_subscription_ids_post
      requestBody:
        $ref: '#/components/requestBodies/SubscriptionIds'
      responses:
        "200":
          description: List of notifications related to the subscription identifiers
            into body request.
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.management_controller
  /api_key:
    post:
      tags:
      - Api Key Management
      operationId: api_key_post
      responses:
        "201":
          description: It generates and returns an API KEY for interacting with the
            VNF LCM API Emulator endpoints.
          content:
            application/json:
              schema:
                type: string
                x-content-type: application/json
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-openapi-router-controller: swagger_server.controllers.api_key_management_controller
  /vnflcm/v2/vnf_instances:
    get:
      tags:
      - VNF Instances
      description: |
        Query VNF.
        The GET method queries information about multiple VNF instances.
      operationId: vnf_instances_get
      parameters:
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: |
          Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression.
        required: false
        schema:
          type: string
      - name: all_fields
        in: query
        description: |
          Include all complex attributes in the response. See clause 5.3 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support this parameter.
        required: false
        schema:
          type: string
      - name: fields
        in: query
        description: |
          Complex attributes to be included into the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional entity should support this parameter.
        required: false
        schema:
          type: string
      - name: exclude_fields
        in: query
        description: |
          Complex attributes to be excluded from the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional entity should support this parameter.
        required: false
        schema:
          type: string
      - name: exclude_default
        in: query
        description: Indicates to exclude the following complex attributes from the
          response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO
          functional entity shall support this parameter.
        required: false
        schema:
          type: string
      - name: nextpage_opaque_marker
        in: query
        description: |
          Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200 OK\n\nShall be returned when information about zero or\
            \ more VNF instances has been queried successfully.\nThe response body\
            \ shall contain in an array the representations of zero or more VNF instances,\n\
            as defined in clause 5.5.2.2.\nIf the \"filter\" URI parameter or one\
            \ of the \"all_fields\", \"fields\" (if supported), \"exclude_fields\"\
            \n(if supported) or \"exclude_default\" URI parameters was supplied in\
            \ the request, the data in the response\nbody shall have been transformed\
            \ according to the rules specified in clauses 5.2.2 and 5.3.2 of\nETSI\
            \ GS NFV-SOL 013, respectively.\nIf the VNFM supports alternative 2 (paging)\
            \ according to clause 5.4.7.2.1 of ETSI GS NFV-SOL 013\nfor this resource,\
            \ inclusion of the Link HTTP header in this response shall follow the\
            \ provisions\nin clause 4.7.2.3.5.4.2.3 of ETSI GS NFV-SOL 013.\n"
          headers:
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
            Link:
              description: "Reference to other resources. Used for paging in the present\
                \ document, see clause 4.7.2.1.\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VnfInstance'
                x-content-type: application/json
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "416":
          description: |
            416 Range Not Satisfiable
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_instances_controller
    post:
      tags:
      - VNF Instances
      description: "The POST method creates a new VNF instance resource based on a\
        \ VNF package that is onboarded and in\n\"ENABLED\" state.\nThis method shall\
        \ follow the provisions specified in the tables 5.4.2.3.1-1 and 5.4.2.3.1-2\n\
        for URI query parameters, request and response data structures, and response\
        \ codes.\nAs the result of successfully executing this method, a new \"Individual\
        \ VNF instance\"\nresource as defined in clause 5.4.3 shall have been created,\
        \ and the value of the\n\"instantiationState\" attribute in the representation\
        \ of that resource shall be \"NOT_INSTANTIATED\".\nA notification of type\
        \ VnfIdentifierCreationNotification shall be triggered as part of successfully\n\
        executing this method as defined in clause 5.5.2.18.\nWhen initiating the\
        \ creation of a VNF instance resource, the passed metadata values can differ\
        \ from \nthe default values for metadata, if any, declared in the VNFD.\n\
        The VNFM shall apply the \"metadata\" attributes in the \"CreateVnfRequest\"\
        \ data structure in the payload \nbody to the \"metadata\" attribute in the\
        \ \"VnfInstance\" data structure on top of the default values that \nwere\
        \ obtained from the VNFD according to the rules of JSON Merge Patch (see IETF\
        \ RFC 7396). \nFor all metadata keys defined in the VNFD, the VNFM shall ensure\
        \ that the content of the resulting \n\"metadata\" attributes is valid against\
        \ the data type definitions in the VNFD. The absence of a metadata \nitem\
        \ that is marked \"required\" in the VNFD shall not be treated as an error.\
        \ In case a \"metadata\" child \nattribute is not defined in the VNFD, the\
        \ VNFM shall consider it valid in case it is a valid JSON structure. \nIn\
        \ case of an error, the operation shall be rejected with a \"422 Unprocessable\
        \ Entity\" error.\n"
      operationId: vnf_instances_post
      parameters:
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/CreateVnfRequest'
      responses:
        "201":
          description: "201 CREATED\n\nShall be returned when a new \"Individual VNF\
            \ instance\" resource and\nthe associated VNF instance identifier washas\
            \ been created successfully.\nThe response body shall contain a representation\
            \ of the created VNF instance,\nas defined in clause 5.5.2.2.\nThe HTTP\
            \ response shall include a \"Location\" HTTP header that contains the\
            \ resource\nURI of the created VNF instance.\n"
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VnfInstance'
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "422 UNPROCESSABLE ENTITY\nIf the payload body of a request\
            \ contains syntactically correct data (e.g. well-formed JSON) but the\
            \ data cannot be processed (e.g. because it fails validation against a\
            \ schema), the API producer shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            This error response code is only applicable for methods that have a request\
            \ body.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_instances_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}:
    get:
      tags:
      - VNF Instances
      description: "Query VNF.\n\nThe GET method retrieves information about a VNF\
        \ instance by reading an \"Individual VNF instance\" resource.\nThis method\
        \ shall follow the provisions specified in the tables 5.4.3.3.2-1 and 5.4.3.3.2-2\n\
        for URI query parameters, request and response data structures, and response\
        \ codes.\n"
      operationId: vnf_instances_vnf_instance_id_get
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200 OK\n\nShall be returned when information about an individual\
            \ VNF instance has been read successfully.\nThe response body shall contain\
            \ a representation of the VNF instance, as defined in clause 5.5.2.2.\n"
          headers:
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VnfInstance'
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "416":
          description: |
            416 Range Not Satisfiable
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_instances_controller
    delete:
      tags:
      - VNF Instances
      description: "Delete VNF Identifier.\nThis method deletes an \"Individual VNF\
        \ instance\" resource.\nThis method shall follow the provisions specified\
        \ in the tables 5.4.3.3.5-1 and 5.4.3.3.5-2\nfor URI query parameters, request\
        \ and response data structures, and response codes.\nAs the result of successfully\
        \ executing this method, the \"Individual VNF instance\" resource\nshall not\
        \ exist any longer.\nA notification of type \"VnfIdentifierDeletionNotification\"\
        \ shall be triggered as part of successfully\nexecuting this method as defined\
        \ in clause 5.5.2.19.\n"
      operationId: vnf_instances_vnf_instance_id_delete
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            204 NO CONTENT

            Shall be returned when the "Individual VNF instance" resource and the associated
            VNF identifier were deleted successfully.
            The response body shall be empty.
          headers:
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "412 PRECONDITION FAILED\nError: A precondition given in an\
            \ HTTP request header is not fulfilled. Typically, this is due to an ETag\
            \ mismatch, indicating that the resource was modified by another entity.\
            \ The response body should contain a ProblemDetails structure, in which\
            \ the \"detail\" attribute should convey more information about the error.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_instances_controller
    patch:
      tags:
      - VNF Instances
      description: "Modify VNF Information.\nThis method modifies an \"Individual\
        \ VNF instance\" resource.\nChanges to the VNF configurable properties are\
        \ applied to the configuration in the VNF instance,\nand are reflected in\
        \ the representation of this resource.\nOther changes are applied to the VNF\
        \ instance information managed by the VNFM, and are reflected\nin the representation\
        \ of this resource.\nThis method shall follow the provisions specified in\
        \ the tables 5.4.3.3.4-1 and 5.4.3.3.4-2\nfor URI query parameters, request\
        \ and response data structures, and response codes.\nThe steps and conditions\
        \ that apply as the result of successfully executing this method are\nspecified\
        \ in clause 5.4.1.2.\n\nThe VNFM shall apply the \"metadata\", \"extensions\"\
        \ and \"vnfConfigurableProperties\" attributes in the \n\"VnfInfoModificationRequest\"\
        \ data structure in the payload body to the existing \"extensions\" and\n\"\
        vnfConfigurableProperties\" attributes from the \"VnfInstance\" data structure\
        \ according to the \nrules of JSON Merge Patch (see IETF RFC 7396).\nThe VNFM\
        \ shall ensure that the content of the child attributes of the resulting \"\
        metadata\", \"extensions\" \nand \"vnfConfigurableProperties\" attributes\
        \ is valid against the data types definitions of these child \nattributes\
        \ in the VNFD. \n\nIn case a \"metadata\" child attribute is not defined in\
        \ the VNFD, the VNFM shall consider it valid in \ncase it is a valid JSON\
        \ structure.\n\nNOTE: \"Extensions\" and \"vnfConfigurableProperties\" child\
        \ attributes are always declared in the VNFD.\n\nIf the VNF instance is in\
        \ the \"INSTANTIATED\" state, the validation shall also include \nensuring\
        \ the presence of all \"extensions\" and \"vnfConfigurableProperties\" child\
        \ attributes that are \nmarked as \"required\" in the VNFD. \n\nNOTE: This\
        \ allows to build the set of \"extensions\" and \"vnfConfigurableProperties\"\
        \ incrementally \nprior VNF instantiation but ensures their completeness for\
        \ an instantiated VNF instance.\n\nThe absence of a metadata item that is\
        \ marked \"required\" in the VNFD shall not be treated as an error.\n\nIn\
        \ case of an error during validation, the operation shall be automatically\
        \ rolled back, and \nappropriate error information shall be provided in the\
        \ \"VnfLcmOperationOccurrenceNotification\" \nmessage and the \"VnfLcmOpOcc\"\
        \ data structure. \nThe processing of changes to the \"metadata\" / \"extensions\"\
        \ / \"vnfConfigurableProperties\" attributes \nshall be performed in the \"\
        PROCESSING\" phase of the LCM operation. The change shall be atomic, i.e.\
        \ the \nresult of intermediate stages shall not be visible in the API. In\
        \ case of successful completion of the \nprocessing and validation, the attributes\
        \ shall be provided in the \"VnfInstance\" data structure and \nthe operation\
        \ shall proceed towards successful completion.\n"
      operationId: vnf_instances_vnf_instance_id_patch
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/VnfInfoModificationRequest'
      responses:
        "202":
          description: "202 ACCEPTED\n\nShall be returned when the request has been\
            \ accepted for processing.\nOn success, the HTTP response shall include\
            \ a \"Location\" HTTP header that\ncontains the URI of the newly-created\
            \ \"Individual VNF LCM operation occurrence\"\nresource corresponding\
            \ to the operation.\nThe response body shall be empty.\n"
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VnfInstance'
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "412 PRECONDITION FAILED\nError: A precondition given in an\
            \ HTTP request header is not fulfilled. Typically, this is due to an ETag\
            \ mismatch, indicating that the resource was modified by another entity.\
            \ The response body should contain a ProblemDetails structure, in which\
            \ the \"detail\" attribute should convey more information about the error.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_instances_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}/instantiate:
    post:
      tags:
      - VNF LCM Operations
      description: "Instantiate VNF.\nThe POST method instantiates a VNF instance.\n\
        This method shall follow the provisions specified in the tables 5.4.4.3.1-1\
        \ and 5.4.4.3.1-2\nfor URI query parameters, request and response data structures,\
        \ and response codes.\nThe steps and conditions that apply as the result of\
        \ successfully executing this method\nare specified in clause 5.4.1.2.\nIn\
        \ addition, once the VNFM has successfully completed the underlying VNF LCM\
        \ operation occurrence,\nit shall set the \"instantiationState\" attribute\
        \ to the value \"INSTANTIATED\" and the \"vnfState\"\nattribute to the value\
        \ \"STARTED\" in the representation of the \"Individual VNF instance\" resource.\n\
        \nWhen instantiating a VNF instance, the values of the extensions and/or VNF\
        \ configurable properties \npassed in the instantiation request can differ\
        \ from the values in the \"VnfInstance\" data structure \nthat were initialized\
        \ from default values, if any, declared in the VNFD. \nThe VNFM shall apply\
        \ the \"extensions\" and \"vnfConfigurableProperties\" attributes in the \n\
        \"InstantiateVnfRequest\" data structure in the payload body to the existing\
        \ \"extensions\" and \n\"vnfConfigurableProperties\" attributes from the \"\
        VnfInstance\" data structure according to the rules \nof JSON Merge Patch\
        \ (see IETF RFC 7396). The VNFM shall ensure that the content of the resulting\
        \ \n\"extensions\" and \"vnfConfigurableProperties\" attributes is valid against\
        \ the VNFD (including the \npresence of all child attributes that are marked\
        \ as \"required\" in the VNFD). In case of an error \nduring validation, the\
        \ operation shall be automatically rolled back, and appropriate error information\
        \ \nshall be provided in the \"VnfLcmOperationOccurrenceNotification\" message\
        \ and the \"VnfLcmOpOcc\" \ndata structure. The processing of changes to the\
        \ \"extensions\" / \"vnfConfigurableProperties\" attributes \nshall be performed\
        \ in the \"STARTING\" phase of the LCM operation. The change shall be atomic,\
        \ i.e. \nthe result of intermediate stages shall not be visible in the API.\
        \ In case of successful completion \nof the processing and validation, the\
        \ attributes shall be provided in the \"VnfInstance\" data structure \nand\
        \ the operation shall proceed to obtain the grant.\n"
      operationId: vnf_instances_vnf_instance_id_instantiate_post
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/InstantiateVnfRequest'
      responses:
        "202":
          description: |
            202 ACCEPTED

            Shall be returned when the request has been accepted for processing
            The response body shall be empty.
            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "Individual VNF LCM operation
            occurrence" resource corresponding to the operation.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "416":
          description: |
            416 Range Not Satisfiable
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operations_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}/scale:
    post:
      tags:
      - VNF LCM Operations
      description: "Scale VNF.\nThe POST method requests to scale a VNF instance resource\
        \ incrementally.\nThis method shall follow the provisions specified in the\
        \ tables 5.4.5.3.1-1 and 5.4.5.3.1-2\nfor URI query parameters, request and\
        \ response data structures, and response codes.\nThe steps and conditions\
        \ that apply as the result of successfully executing this method are\nspecified\
        \ in clause 5.4.1.2.\nIn addition, once the VNFM has successfully completed\
        \ the underlying VNF LCM operation occurrence,\nit shall reflect the result\
        \ of scaling the VNF instance by updating the \"scaleStatus\" attribute\n\
        in the representation of the \"Individual VNF instance\" resource.\n"
      operationId: vnf_instances_vnf_instance_id_scale_post
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ScaleVnfRequest'
      responses:
        "202":
          description: |
            202 ACCEPTED

            Shall be returned when the request has been accepted for processing.
            The response body shall be empty.
            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "VNF LCM operation
            occurrence" resource corresponding to the operation.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operations_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}/scale_to_level:
    post:
      tags:
      - VNF LCM Operations
      description: "Scale VNF to Level.\nThe POST method requests to scale a VNF instance\
        \ resource to a target level.\nThis method shall follow the provisions specified\
        \ in the tables 5.4.6.3.1-1 and 5.4.6.3.1-2\nfor URI query parameters, request\
        \ and response data structures, and response codes.\nThe steps and conditions\
        \ that apply as the result of successfully executing this method are\nspecified\
        \ in clause 5.4.1.2.\nIn addition, once the VNFM has successfully completed\
        \ the underlying VNF LCM operation occurrence,\nit shall reflect the result\
        \ of scaling the VNF instance by updating the \"scaleStatus\" attribute\n\
        in the representation of the \"Individual VNF instance\" resource.\n"
      operationId: vnf_instances_vnf_instance_id_scale_to_level_post
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ScaleVnfToLevelRequest'
      responses:
        "202":
          description: |
            202 ACCEPTED

            Shall be returned when the request has been accepted for processing.
            The response body shall be empty.
            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "VNF LCM operation
            occurrence" resource corresponding to the operation.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operations_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}/change_flavour:
    post:
      tags:
      - VNF LCM Operations
      description: "Change VNF Flavour.\nThis method shall follow the provisions specified\
        \ in the tables 5.4.7.3.1-1 and 5.4.7.3.1-2\nfor URI query parameters, request\
        \ and response data structures, and response codes.\nThe steps and conditions\
        \ that apply as the result of successfully executing this method\nare specified\
        \ in clause 5.4.1.2.\nIn addition, once the VNFM has successfully completed\
        \ the underlying VNF LCM operation occurrence,\nit shall set the \"flavourId\"\
        \ attribute in the representation of the \"Individual VNF instance\"\nresource\
        \ to the value of the \"newFlavourId\" attribute passed in the \"ChangeVnfFlavourRequest\"\
        \ndata in the POST request.\n\nWhen initiating a change of the current VNF\
        \ flavour, the values of the extensions and/or VNF \nconfigurable properties,\
        \ can differ between the new flavour and the old flavour of the VNF instance.\n\
        The VNFM shall apply the \"extensions\" and \"vnfConfigurableProperties\"\
        \ attributes in the \n\"ChangeVnfFlavourRequest\" data structure in the payload\
        \ body to the existing \"extensions\" and \n\"vnfConfigurableProperties\"\
        \ attributes from the \"VnfInstance\" data structure according to the rules\
        \ \nof JSON Merge Patch (see IETF RFC 7396). The VNFM shall ensure that the\
        \ content of the resulting \n\"extensions\" and \"vnfConfigurableProperties\"\
        \ attributes is valid against the VNFD (which includes \nensuring the presence\
        \ of all child attributes that are marked as \"required\" in the VNFD). In\
        \ case\nof an error, the operation shall be automatically rolled back, and\
        \ appropriate error information \nshall be provided in the \"VnfLcmOperationOccurrenceNotification\"\
        \ message and the \"VnfLcmOpOcc\" data \nstructure. The processing of changes\
        \ to the \"extensions\" / \"vnfConfigurableProperties\" attributes \nshall\
        \ be performed in the \"STARTING\" phase of the LCM operation. The change\
        \ shall be atomic, i.e. \nthe result of intermediate stages shall not be visible\
        \ in the API. In case of successful completion \nof the processing and validation,\
        \ the attributes shall be provided in the \"VnfInstance\" data structure \n\
        and the operation shall proceed to obtain the grant.\n"
      operationId: vnf_instances_vnf_instance_id_change_flavour_post
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ChangeVnfFlavourRequest'
      responses:
        "202":
          description: |
            202 ACCEPTED

            Shall be returned when the request has been accepted for processing.
            The response body shall be empty.
            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "VNF LCM operation
            occurrence" resource corresponding to the operation.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operations_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}/terminate:
    post:
      tags:
      - VNF LCM Operations
      description: "Terminate VNF.\nThe POST method triggers the VNFM to terminate\
        \ a VNF instance and to request to the VIM\nthe release of its used virtualised\
        \ resources.\nThis method shall follow the provisions specified in the tables\
        \ 5.4.8.3.1-1 and 5.4.8.3.1-2\nfor URI query parameters, request and response\
        \ data structures, and response codes.\nThe steps and conditions that apply\
        \ as the result of successfully executing this method\nare specified in clause\
        \ 5.4.1.2.\nIn addition, once the VNFM has successfully completed the underlying\
        \ VNF LCM operation occurrence,\nit shall set the \"instantiationState\" attribute\
        \ in the representation of the \"Individual VNF instance\"\nresource to the\
        \ value \"NOT_INSTANTIATED\".\n"
      operationId: vnf_instances_vnf_instance_id_terminate_post
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/TerminateVnfRequest'
      responses:
        "202":
          description: |
            202 ACCEPTED

            Shall be returned when the request has been accepted for processing.
            The response body shall be empty.
            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "VNF LCM operation
            occurrence" resource corresponding to the operation.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operations_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}/heal:
    post:
      tags:
      - VNF LCM Operations
      description: "Heal VNF.\nThe POST method requests to heal a VNF instance.\n\
        This method shall follow the provisions specified in the tables 5.4.9.3.1-1\
        \ and 5.4.9.3.1-2\nfor URI query parameters, request and response data structures,\
        \ and response codes.\nThe steps and conditions that apply as the result of\
        \ successfully executing this method\nare specified in clause 5.4.1.2.\n"
      operationId: vnf_instances_vnf_instance_id_heal_post
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/HealVnfRequest'
      responses:
        "202":
          description: |
            202 ACCEPTED

            Shall be returned when the request has been accepted for processing.
            The response body shall be empty.
            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "VNF LCM operation
            occurrence" resource corresponding to the operation.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operations_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}/operate:
    post:
      tags:
      - VNF LCM Operations
      description: "Operate VNF.\nThe POST method changes the operational state of\
        \ a VNF instance resource.\nThis method shall follow the provisions specified\
        \ in the tables 5.4.10.3.1-1 and 5.4.10.3.1-2\nfor URI query parameters, request\
        \ and response data structures, and response codes.\nThe steps and conditions\
        \ that apply as the result of successfully executing this method\nare specified\
        \ in clause 5.4.1.2.\nIn addition, once the VNFM has successfully completed\
        \ the underlying VNF LCM operation occurrence,\nit shall set the \"vnfState\"\
        \ attribute in the representation of the \"Individual VNF instance\" resource\n\
        to the value of the \"changeStateTo\" attribute passed in the \"OperateVnfRequest\"\
        \ data in the POST request.\n"
      operationId: vnf_instances_vnf_instance_id_operate_post
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/OperateVnfRequest'
      responses:
        "202":
          description: |
            202 ACCEPTED

            Shall be returned when the request has been accepted for processing.
            The response body shall be empty.
            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "VNF LCM operation
            occurrence" resource corresponding to the operation.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operations_controller
  /vnflcm/v2/vnf_instances/{vnfInstanceId}/change_ext_conn:
    post:
      tags:
      - VNF LCM Operations
      description: "Change External VNF Connectivity.\nThe POST method changes the\
        \ external connectivity of a VNF instance.\nThis method shall follow the provisions\
        \ specified in the tables 5.4.11.3.1-1 and 5.4.11.3.1-2\nfor URI query parameters,\
        \ request and response data structures, and response codes.\nThe steps and\
        \ conditions that apply as the result of successfully executing this method\n\
        are specified in clause 5.4.1.2.\n"
      operationId: vnf_instances_vnf_instance_id_change_ext_conn_post
      parameters:
      - name: vnfInstanceId
        in: path
        description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
          \ to. This identifier can be retrieved from the resource \nreferenced by\
          \ the \"Location\" HTTP header in the response to a POST request creating\
          \ a new \"Individual VNF instance\" resource. \nIt can also be retrieved\
          \ from the \"id\" attribute in the payload body of that response.\n"
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/ChangeExtVnfConnectivityRequest'
      responses:
        "202":
          description: |
            202 ACCEPTED

            Shall be returned when the request has been accepted for processing.
            The response body shall be empty.
            The HTTP response shall include a "Location" HTTP header that
            contains the URI of the newly-created "VNF LCM operation
            occurrence" resource corresponding to the operation.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: |
            409 CONFLICT
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operations_controller
  /vnflcm/v2/vnf_lcm_op_occs:
    get:
      tags:
      - VNF LCM Operation Occurrences
      description: "Get Operation Status.\nThe API consumer can use this method to\
        \ query status information about multiple\nVNF lifecycle management operation\
        \ occurrences.\nThis method shall follow the provisions specified in the tables\
        \ 5.4.12.3.2-1 and 5.4.12.3.2-2\nfor URI query parameters, request and response\
        \ data structures, and response codes.\n"
      operationId: vnf_lcm_op_occs_get
      parameters:
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: filter
        in: query
        description: |
          Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression.
        required: false
        schema:
          type: string
      - name: all_fields
        in: query
        description: |
          Include all complex attributes in the response. See clause 5.3 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support this parameter.
        required: false
        schema:
          type: string
      - name: fields
        in: query
        description: |
          Complex attributes to be included into the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional entity should support this parameter.
        required: false
        schema:
          type: string
      - name: exclude_fields
        in: query
        description: |
          Complex attributes to be excluded from the response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO functional entity should support this parameter.
        required: false
        schema:
          type: string
      - name: exclude_default
        in: query
        description: Indicates to exclude the following complex attributes from the
          response. See clause 5.3 of ETSI GS NFV-SOL 013 for details. The NFV-MANO
          functional entity shall support this parameter.
        required: false
        schema:
          type: string
      - name: nextpage_opaque_marker
        in: query
        description: |
          Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource.
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: "200 OK\n\nShall be returned when status information for zero\
            \ or more VNF lifecycle management\noperation occurrences has been queried\
            \ successfully.\nThe response body shall contain in an array the status\
            \ information about zero or more\nVNF lifecycle operation occurrences,\
            \ as defined in clause 5.5.2.13.\nIf the \"filter\" URI parameter or one\
            \ of the \"all_fields\", \"fields\" (if supported),\n\"exclude_fields\"\
            \ (if supported) or \"exclude_default\" URI parameters was supplied in\
            \ the request,\nthe data in the response body shall have been transformed\
            \ according to the rules specified\nin clauses 5.2.2 and 5.3.2 of ETSI\
            \ GS NFV-SOL 013, respectively.\nIf the VNFM supports alternative 2 (paging)\
            \ according to clause 5.4.2.1 of ETSI GS NFV-SOL 013\nfor this resource,\
            \ inclusion of the Link HTTP header in this response shall follow the\
            \ provisions\nin clause 5.4.2.3 of ETSI GS NFV-SOL 013.\n"
          headers:
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
            Link:
              description: "Reference to other resources. Used for paging in the present\
                \ document, see clause 4.7.2.1.\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VnfLcmOpOcc'
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operation_occurrences_controller
  /vnflcm/v2/vnf_lcm_op_occs/{vnfLcmOpOccId}:
    get:
      tags:
      - VNF LCM Operation Occurrences
      description: "Get Operation Status.\nThe API consumer can use this method to\
        \ retrieve status information about a VNF lifecycle\nmanagement operation\
        \ occurrence by reading an \"Individual VNF LCM operation occurrence\" resource.\n\
        This method shall follow the provisions specified in the tables 5.4.13.3.2-1\
        \ and 5.4.13.3.2-2\nfor URI query parameters, request and response data structures,\
        \ and response codes.\n"
      operationId: vnf_lcm_op_occs_vnf_lcm_op_occ_id_get
      parameters:
      - name: vnfLcmOpOccId
        in: path
        description: |
          Identifier of a VNF lifecycle management operation occurrence. This identifier can be retrieved from the resource
          referenced by the "Location" HTTP header in the response to a PATCH or POST request triggering a VNF LCM operation.
          It can also be retrieved from the "vnfLcmOpOccId" attribute in the VnfLcmOperationOccurrenceNotification.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: |
            200 OK

            Shall be returned when information about a VNF LCM operation occurrence washas been read successfully.
            The response body shall contain status information about a VNF lifecycle management operation occurrence
            (see clause 5.5.2.13).
          headers:
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VnfLcmOpOcc'
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.vnf_lcm_operation_occurrences_controller
  /vnflcm/v2/subscriptions:
    get:
      tags:
      - Subscriptions
      description: |
        Query Subscription Information.
        The GET method queries the list of active subscriptions of the
        functional block that invokes the method. It can be used e.g. for
        resynchronization after error situations.
      operationId: subscriptions_get
      parameters:
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      - name: filter
        in: query
        description: |
          Attribute-based filtering expression according to clause 5.2 of ETSI GS NFV-SOL 013. The NFV-MANO functional entity shall support receiving this parameter as part of the URI query string. The API consumer may supply this parameter. All attribute names that appear in the FmSubscription and in data types referenced from it shall be supported by the NFV-MANO functional entity in the filter expression.
        required: false
        schema:
          type: string
      - name: nextpage_opaque_marker
        in: query
        description: |
          Marker to obtain the next page of a paged response. Shall be supported by the NFV-MANO functional entity if the entity supports alternative 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013 for this resource.
        required: false
        schema:
          type: string
      responses:
        "200":
          description: "200 OK\n\nShall be returned when the list of subscriptions\
            \ has been queried successfully.\nThe response body shall contain in an\
            \ array the representations of all active subscriptions of\nthe functional\
            \ block that invokes the method, i.e. zero or more representations of\
            \ lifecycle change\nnotification subscriptions as defined in clause 5.5.2.16.\n\
            If the \"filter\" URI parameter was supplied in the request, the data\
            \ in the response body shall have been\ntransformed according to the rules\
            \ specified in clause 5.2.2 of ETSI GS NFV-SOL 013.\nIf the VNFM supports\
            \ alternative 2 (paging) according to clause 5.4.7.2.1 of ETSI GS NFV-SOL\
            \ 013\nfor this resource, inclusion of the Link HTTP header in this response\
            \ shall follow the provisions\nin clause 4.7.2.3.5.4.2.3 of ETSI GS NFV-SOL\
            \ 013.\n"
          headers:
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
            Link:
              description: "Reference to other resources. Used for paging in the present\
                \ document, see clause 4.7.2.1.\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LccnSubscription'
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.subscriptions_controller
    post:
      tags:
      - Subscriptions
      description: "Subscribe.\nThe POST method creates a new subscription.\nThis\
        \ method shall follow the provisions specified in the tables 5.4.18.3.1-1\
        \ and 5.4.18.3.1-2\nfor URI query parameters, request and response data structures,\
        \ and response codes.\nAs the result of successfully executing this method,\
        \ a new \"Individual subscription\"\nresource as defined in clause 5.4.3 shall\
        \ have been created. This method shall not trigger any notification.\nCreation\
        \ of two \"Individual subscription\" resources with the same callback URI\
        \ and the same filter\ncan result in performance degradation and will provide\
        \ duplicates of notifications to the NFVO,\nand might make sense only in very\
        \ rare use cases. Consequently, the VNFM may either allow creating\nan \"\
        Individual subscription\" resource if another \"Individual subscription\"\
        \ resource with the same\nfilter and callback URI already exists (in which\
        \ case it shall return the \"201 Created\" response code),\nor may decide\
        \ to not create a duplicate \"Individual subscription\" resource (in which\
        \ case it shall\nreturn a \"303 See Other\" response code referencing the\
        \ existing \"Individual subscription\" resource\nwith the same filter and\
        \ callback URI).\n"
      operationId: subscriptions_post
      parameters:
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      requestBody:
        $ref: '#/components/requestBodies/LccnSubscriptionRequest'
      responses:
        "201":
          description: |
            201 CREATED

            Shall be returned when the subscription has been created successfully.
            The response body shall contain a representation of the created "Individual subscription" resource.
            The HTTP response shall include a "Location" HTTP header that points to the created
            "Individual subscription" resource.
          headers:
            Location:
              description: |
                The resource URI of the created subscription resource.
              style: simple
              explode: false
              schema:
                type: string
                format: url
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LccnSubscription'
        "303":
          description: |
            303 See Other
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "422 UNPROCESSABLE ENTITY\nIf the payload body of a request\
            \ contains syntactically correct data (e.g. well-formed JSON) but the\
            \ data cannot be processed (e.g. because it fails validation against a\
            \ schema), the API producer shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            This error response code is only applicable for methods that have a request\
            \ body.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.subscriptions_controller
  /vnflcm/v2/subscriptions/{subscriptionId}:
    get:
      tags:
      - Subscriptions
      description: "Query Subscription Information.\nThe GET method retrieves information\
        \ about a subscription by reading an \"Individual subscription\" resource.\n\
        This method shall follow the provisions specified in the tables 5.4.19.3.2-1\
        \ and 5.4.19.3.2-2\nfor URI query parameters, request and response data structures,\
        \ and response codes.\n"
      operationId: subscriptions_subscription_id_get
      parameters:
      - name: subscriptionId
        in: path
        description: |
          Identifier of this subscription. This identifier can be retrieved from the resource referenced by the "Location"
          HTTP header in the response to a POST request creating a new subscription resource. It can also be retrieved from
          the "id" attribute in the payload body of that response.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      responses:
        "200":
          description: |
            200 OK

            Shall be returned when information about an individual subscription has been read successfully.
            The response body shall contain a representation of the "Individual subscription" resource.
          headers:
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
            Content-Type:
              description: "The MIME type of the body of the response. Reference:\
                \ IETF RFC 7231\n"
              style: simple
              explode: false
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LccnSubscription'
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.subscriptions_controller
    delete:
      tags:
      - Subscriptions
      description: "Terminate Subscription.\nThe DELETE method terminates an individual\
        \ subscription.\nThis method shall follow the provisions specified in the\
        \ tables 5.4.19.3.5-1 and 5.4.19.3.5-2\nfor URI query parameters, request\
        \ and response data structures, and response codes.\nAs the result of successfully\
        \ executing this method, the \"Individual subscription\" resource\nshall not\
        \ exist any longer. This means that no notifications for that subscription\
        \ shall be\nsent to the formerly-subscribed API consumer.\n\n  NOTE: Due to\
        \ race conditions, some notifications might still be received by the formerly-subscribed\n\
        \nAPI consumer for a certain time period after the deletion.\n"
      operationId: subscriptions_subscription_id_delete
      parameters:
      - name: subscriptionId
        in: path
        description: |
          Identifier of this subscription. This identifier can be retrieved from the resource referenced by the "Location"
          HTTP header in the response to a POST request creating a new subscription resource. It can also be retrieved from
          the "id" attribute in the payload body of that response.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: Authorization
        in: header
        description: "The authorization token for the request. Reference: IETF RFC\
          \ 7235.\n"
        required: false
        schema:
          type: string
      - name: Version
        in: header
        description: |
          Version of the API requested to use when responding to this request.
        required: true
        schema:
          type: string
      responses:
        "204":
          description: |
            204 NO CONTENT

            Shall be returned when the "Individual subscription" resource has been deleted successfully.
            The response body shall be empty.
          headers:
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the\ncorresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              style: simple
              explode: false
              schema:
                type: string
            Version:
              description: The used API version.
              style: simple
              explode: false
              schema:
                type: string
        "400":
          description: "400 BAD REQUEST\n400 code can be returned in the following\
            \ specified cases, the specific cause has to be proper specified in the\
            \ \"ProblemDetails\" structure to be returned.\nIf the request is malformed\
            \ or syntactically incorrect (e.g. if the request URI contains incorrect\
            \ query parameters or the payload body contains a syntactically incorrect\
            \ data structure), the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure shall be provided, and should include\
            \ in the \"detail\" attribute more information about the source of the\
            \ problem.\nIf the response to a GET request which queries a container\
            \ resource would be so big that the performance of the API producer is\
            \ adversely affected, and the API producer does not support paging for\
            \ the affected resource, it shall respond with this response code. The\
            \ \"ProblemDetails\" structure shall be provided, and should include in\
            \ the \"detail\" attribute more information about the source of the problem.\n\
            If there is an application error related to the client's input that cannot\
            \ be easily mapped to any other HTTP response code (\"catch all error\"\
            ), the API producer shall respond with this response code. The \"ProblemDetails\"\
            \ structure shall be provided, and shall include in the \"detail\" attribute\
            \ more information about the source of the problem.\nIf the request contains\
            \ a malformed access token, the API producer should respond with this\
            \ response. The details of the error shall be returned in the WWW Authenticate\
            \ HTTP header, as defined in IETF RFC 6750 and IETF RFC 7235. The ProblemDetails\
            \ structure may be provided.\nThe use of this HTTP error response code\
            \ described above is applicable to the use of the OAuth 2.0 for the authorization\
            \ of API requests and notifications, as defined in clauses 4.5.3.3 and\
            \ 4.5.3.4.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "401 UNAUTHORIZED\nIf the request contains no access token\
            \ even though one is required, or if the request contains an authorization\
            \ token that is invalid (e.g. expired or revoked), the API producer should\
            \ respond with this response. The details of the error shall be returned\
            \ in the WWW-Authenticate HTTP header, as defined in IETF RFC 6750 and\
            \ IETF RFC 7235. The ProblemDetails structure may be provided.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "403 FORBIDDEN\nIf the API consumer is not allowed to perform\
            \ a particular request to a particular resource, the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided. It should include in the \"detail\" attribute information\
            \ about the source of the problem, and may indicate how to solve it.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "404 NOT FOUND\nIf the API producer did not find a current\
            \ representation for the resource addressed by the URI passed in the request\
            \ or is not willing to disclose that one exists, it shall respond with\
            \ this response code. The \"ProblemDetails\" structure may be provided,\
            \ including in the \"detail\" attribute information about the source of\
            \ the problem, e.g. a wrong resource URI variable.\nThis response code\
            \ is not appropriate in case the resource addressed by the URI is a container\
            \ resource which is designed to contain child resources, but does not\
            \ contain any child resource at the time the request is received. For\
            \ a GET request to an existing empty container resource, a typical response\
            \ contains a 200 OK response code and a payload body with an empty array.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "405":
          description: "405 METHOD NOT ALLOWED\nIf a particular HTTP method is not\
            \ supported for a particular resource, the API producer shall respond\
            \ with this response code. The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "406 NOT ACCEPTABLE\nIf the \"Accept\" HTTP header does not\
            \ contain at least one name of a content type that is acceptable to the\
            \ API producer, the API producer shall respond with this response code.\
            \ The \"ProblemDetails\" structure may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "500":
          description: "500 INTERNAL SERVER ERROR\nIf there is an application error\
            \ not related to the client's input that cannot be easily mapped to any\
            \ other HTTP response code (\"catch all error\"), the API producer shall\
            \ respond with this response code. The \"ProblemDetails\" structure shall\
            \ be provided, and shall include in the \"detail\" attribute more information\
            \ about the source of the problem.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "503":
          description: "503 SERVICE UNAVAILABLE\nIf the API producer encounters an\
            \ internal overload situation of itself or of a system it relies on, it\
            \ should respond with this response code, following the provisions in\
            \ IETF RFC 7231 for the use of the \"Retry-After\" HTTP header and for\
            \ the alternative to refuse the connection. The \"ProblemDetails\" structure\
            \ may be omitted.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "504":
          description: "504 GATEWAY TIMEOUT\nIf the API producer encounters a timeout\
            \ while waiting for a response from an upstream server (i.e. a server\
            \ that the API producer communicates with when fulfilling a request),\
            \ it should respond with this response code.\n"
          headers:
            Content-Type:
              description: The MIME type of the body of the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
            WWW-Authenticate:
              description: "Challenge if the corresponding HTTP request has not provided\
                \ authorization, or error details if the corresponding HTTP request\
                \ has provided an invalid authorization token.\n"
              schema:
                maximum: 1
                minimum: 0
                type: string
            Version:
              description: |
                Version of the API used in the response.
              schema:
                maximum: 1
                minimum: 1
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      security:
      - ApiKeyAuth: []
      x-openapi-router-controller: swagger_server.controllers.subscriptions_controller
components:
  schemas:
    ProblemDetails:
      required:
      - detail
      - status
      type: object
      properties:
        type:
          type: string
          description: "A URI reference according to IETF RFC 3986 [5] that identifies\
            \ the problem type. It is encouraged that the URI provides human-readable\
            \ documentation for the problem (e.g. using HTML) when dereferenced. When\
            \ this member is not present, its value is assumed to be \"about:blank\"\
            .\n"
          format: URI
        title:
          type: string
          description: "A short, human-readable summary of the problem type. It should\
            \ not change from occurrence to occurrence of the problem, except for\
            \ purposes of localization. If type is given and other than \"about:blank\"\
            , this attribute shall also be provided. A short, human-readable summary\
            \ of the problem type.  It SHOULD NOT change from occurrence to occurrence\
            \ of the problem, except for purposes of localization (e.g., using proactive\
            \ content negotiation; see [RFC7231], Section 3.4).\n"
        status:
          type: integer
          description: "The HTTP status code for this occurrence of the problem. The\
            \ HTTP status code ([RFC7231], Section 6) generated by the origin server\
            \ for this occurrence of the problem.\n"
        detail:
          type: string
          description: |
            A human-readable explanation specific to this occurrence of the problem.
        instance:
          type: string
          description: |
            A URI reference that identifies the specific occurrence of the problem. It may yield further information if dereferenced.
          format: URI
      description: "The definition of the general \"ProblemDetails\" data structure\
        \ from IETF RFC 7807 [19] is reproduced inthis structure. Compared to the\
        \ general framework defined in IETF RFC 7807 [19], the \"status\" and \"detail\"\
        \ attributes are mandated to be included by the present document, to ensure\
        \ that the response contains additional textual information about an error.\
        \ IETF RFC 7807 [19] foresees extensibility of the \"ProblemDetails\" type.\
        \ It is possible that particular APIs in the present document, or particular\
        \ implementations, define extensions to define additional attributes that\
        \ provide more information about the error. The description column only provides\
        \ some explanation of the meaning to Facilitate understanding of the design.\
        \ For a full description, see IETF RFC 7807 [19].\n"
      example:
        instance: instance
        detail: detail
        type: type
        title: title
        status: 0
    VnfInstance:
      required:
      - id
      - instantiationState
      - vnfProductName
      - vnfProvider
      - vnfSoftwareVersion
      - vnfdId
      - vnfdVersion
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        vnfInstanceName:
          type: string
          description: |
            Name of the VNF instance. This attribute can be modified with the PATCH method.
        vnfInstanceDescription:
          type: string
          description: |
            Human-readable description of the VNF instance. This attribute can be modified with the PATCH method.
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        vnfProvider:
          type: string
          description: |
            Provider of the VNF and the VNFD. The value is copied from the VNFD.
        vnfProductName:
          type: string
          description: |
            Name to identify the VNF Product. The value is copied from the VNFD.
        vnfSoftwareVersion:
          $ref: '#/components/schemas/Version'
        vnfdVersion:
          $ref: '#/components/schemas/Version'
        vnfConfigurableProperties:
          $ref: '#/components/schemas/KeyValuePairs'
        vimConnectionInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VimConnectionInfo'
          description: "Information about VIM connections to be used for managing\
            \ the resources for the VNF instance. The keys of the map, each of which\
            \ identifies information about a particular VIM connection, are managed\
            \ by the NFVO and referenced from other data structures via the \"vimConnectionId\"\
            \ attribute. This attribute shall only be supported and present if VNF-related\
            \ resource management in direct mode is pplicable. This attribute can\
            \ be modified with the PATCH method.\n"
        instantiationState:
          type: string
          description: |
            The instantiation state of the VNF.
          enum:
          - NOT_INSTANTIATED
          - INSTANTIATED
        instantiatedVnfInfo:
          $ref: '#/components/schemas/VnfInstance_instantiatedVnfInfo'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
        extensions:
          description: "Additional VNF-specific attributes that affect the lifecycle\
            \ management of this VNF instance. These attributes represent values that\
            \ are stored persistently in the VnfInstance structure for consumption\
            \ by the VNFM or the lifecycle management scripts during the execution\
            \ of VNF lifecycle management operations. All extensions that are allowed\
            \ for the VNF are declared in the VNFD. The declaration of an extension\
            \ in the VNFD contains information on whether its presence is optional\
            \ or required, and optionally can specify an initial value. See note 2\
            \ and note 4. The VNFM shall reject requests to write extension attributes\
            \ that are not declared in the VNFD with a \"422 Unprocessable entity\"\
            \ error response as defined in clause 6.4 of ETSI GS NFV-SOL 013. Modifying\
            \ the values of these attributes has no direct effect on the VNF instance;\
            \ however, the modified attribute values can be considered during subsequent\
            \ VNF lifecycle management operations, which means that the modified values\
            \ can indirectly affect the configuration of the VNF instance. These attributes\
            \ can be initialized with default values from the VNFD. These attributes\
            \ can be modified with values passed in the request structures of certain\
            \ LCM operations, such as the InstantiateVnfRequest structure. Further,\
            \ these attributes can be created, modified or deleted with the PATCH\
            \ method.\nNOTE: Upon creation of the VnfInstance structure, the VNFM\
            \ shall create and initialize all child attributes of \"vnfConfigurableProperties\"\
            , \"metadata\" and \"extensions\" that were declared in the VNFD with\
            \ a defined initial value. The defined initial values can be declared\
            \ in the VNFD, and/or, in case of \"metadata\", obtained from the \"CreateVnfRequest\"\
            \ structure. Child attributes of \"vnfConfigurableProperties\", \"metadata\"\
            \ and \"extensions\" that have no defineddeclared initial value shall\
            \ not be created, in order to be consistent with the semantics of the\
            \ JSON Merge Patch method (see IETF RFC 7396) that interprets null values\
            \ as deletion request.\n"
        _links:
          $ref: '#/components/schemas/VnfInstance__links'
      description: |
        This type represents a VNF instance.
      example:
        vnfProductName: vnfProductName
        vnfdVersion: null
        vimConnectionInfo:
          key:
            vimType: vimType
            vimId: null
            extra: null
            interfaceInfo: null
            accessInfo: null
        metadata: null
        vnfProvider: vnfProvider
        _links:
          operate: null
          scaleToLevel: null
          heal: null
          createSnapshot: null
          self:
            href: href
          scale: null
          revertToSnapshot: null
          terminate: null
          changeFlavour: null
          indicators: null
          instantiate: null
          changeExtConn: null
        vnfConfigurableProperties: {}
        vnfdId: null
        instantiationState: NOT_INSTANTIATED
        vnfInstanceDescription: vnfInstanceDescription
        extensions: ""
        instantiatedVnfInfo:
          virtualLinkResourceInfo:
          - metadata: null
            reservationId: null
            networkResource: null
            vnfdId: null
            zoneId: null
            id: null
            vnfVirtualLinkDescId: null
            vnfLinkPorts:
            - null
            - null
          - metadata: null
            reservationId: null
            networkResource: null
            vnfdId: null
            zoneId: null
            id: null
            vnfVirtualLinkDescId: null
            vnfLinkPorts:
            - null
            - null
          monitoringParameters:
          - vnfdId: null
            name: name
            id: null
            performanceMetric: performanceMetric
          - vnfdId: null
            name: name
            id: null
            performanceMetric: performanceMetric
          flavourId: flavourId
          scaleStatus:
          - scaleLevel: 0
            aspectId: null
            vnfdId: null
          - scaleLevel: 0
            aspectId: null
            vnfdId: null
          extVirtualLinkInfo:
          - resourceHandle:
              resourceId: null
              vimConnectionId: null
              vimLevelResourceType: vimLevelResourceType
              resourceProviderId: null
            extLinkPorts:
            - resourceHandle: null
              id: null
              cpInstanceId: null
            - resourceHandle: null
              id: null
              cpInstanceId: null
            id: null
            currentVnfExtCpData:
            - cpdId: null
              cpConfig:
                key:
                  linkPortId: null
                  cpProtocolData:
                  - ipOverEthernet:
                      macAddress: null
                      ipAddresses:
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      segmentationId: segmentationId
                    layerProtocol: IP_OVER_ETHERNET
                  - ipOverEthernet:
                      macAddress: null
                      ipAddresses:
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      segmentationId: segmentationId
                    layerProtocol: IP_OVER_ETHERNET
                  parentCpConfigId: null
            - cpdId: null
              cpConfig:
                key:
                  linkPortId: null
                  cpProtocolData:
                  - ipOverEthernet:
                      macAddress: null
                      ipAddresses:
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      segmentationId: segmentationId
                    layerProtocol: IP_OVER_ETHERNET
                  - ipOverEthernet:
                      macAddress: null
                      ipAddresses:
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      segmentationId: segmentationId
                    layerProtocol: IP_OVER_ETHERNET
                  parentCpConfigId: null
          - resourceHandle:
              resourceId: null
              vimConnectionId: null
              vimLevelResourceType: vimLevelResourceType
              resourceProviderId: null
            extLinkPorts:
            - resourceHandle: null
              id: null
              cpInstanceId: null
            - resourceHandle: null
              id: null
              cpInstanceId: null
            id: null
            currentVnfExtCpData:
            - cpdId: null
              cpConfig:
                key:
                  linkPortId: null
                  cpProtocolData:
                  - ipOverEthernet:
                      macAddress: null
                      ipAddresses:
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      segmentationId: segmentationId
                    layerProtocol: IP_OVER_ETHERNET
                  - ipOverEthernet:
                      macAddress: null
                      ipAddresses:
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      segmentationId: segmentationId
                    layerProtocol: IP_OVER_ETHERNET
                  parentCpConfigId: null
            - cpdId: null
              cpConfig:
                key:
                  linkPortId: null
                  cpProtocolData:
                  - ipOverEthernet:
                      macAddress: null
                      ipAddresses:
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      segmentationId: segmentationId
                    layerProtocol: IP_OVER_ETHERNET
                  - ipOverEthernet:
                      macAddress: null
                      ipAddresses:
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      - fixedAddresses:
                        - null
                        - null
                        subnetId: null
                        addressRange:
                          maxAddress: null
                          minAddress: null
                        type: IPV4
                        numDynamicAddresses: 6
                      segmentationId: segmentationId
                    layerProtocol: IP_OVER_ETHERNET
                  parentCpConfigId: null
          localizationLanguage: localizationLanguage
          extManagedVirtualLinkInfo:
          - networkResource: null
            vnfdId: null
            id: null
            vnfVirtualLinkDescId: null
            extManagedMultisiteVirtualLinkId: null
            vnfLinkPorts:
            - resourceHandle: null
              cpInstanceType: VNFC_CP
              id: null
              cpInstanceId: null
            - resourceHandle: null
              cpInstanceType: VNFC_CP
              id: null
              cpInstanceId: null
          - networkResource: null
            vnfdId: null
            id: null
            vnfVirtualLinkDescId: null
            extManagedMultisiteVirtualLinkId: null
            vnfLinkPorts:
            - resourceHandle: null
              cpInstanceType: VNFC_CP
              id: null
              cpInstanceId: null
            - resourceHandle: null
              cpInstanceType: VNFC_CP
              id: null
              cpInstanceId: null
          maxScaleLevels:
          - null
          - null
          vnfcResourceInfo:
          - metadata: null
            storageResourceIds:
            - null
            - null
            reservationId: null
            vnfcCpInfo:
            - metadata: null
              cpProtocolInfo:
              - null
              - null
              cpdId: null
              id: null
              vnfExtCpId: null
              vnfLinkPortId: null
            - metadata: null
              cpProtocolInfo:
              - null
              - null
              cpdId: null
              id: null
              vnfExtCpId: null
              vnfLinkPortId: null
            vnfdId: null
            zoneId: null
            id: null
            vduId: null
            computeResource: null
          - metadata: null
            storageResourceIds:
            - null
            - null
            reservationId: null
            vnfcCpInfo:
            - metadata: null
              cpProtocolInfo:
              - null
              - null
              cpdId: null
              id: null
              vnfExtCpId: null
              vnfLinkPortId: null
            - metadata: null
              cpProtocolInfo:
              - null
              - null
              cpdId: null
              id: null
              vnfExtCpId: null
              vnfLinkPortId: null
            vnfdId: null
            zoneId: null
            id: null
            vduId: null
            computeResource: null
          vnfState: STARTED
          extCpInfo:
          - metadata: null
            cpProtocolInfo:
            - ipOverEthernet:
                macAddress: macAddress
                ipAddresses:
                - subnetId: subnetId
                  addresses:
                  - addresses
                  - addresses
                  isDynamic: true
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                - subnetId: subnetId
                  addresses:
                  - addresses
                  - addresses
                  isDynamic: true
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                segmentationId: segmentationId
              layerProtocol: IP_OVER_ETHERNET
            - ipOverEthernet:
                macAddress: macAddress
                ipAddresses:
                - subnetId: subnetId
                  addresses:
                  - addresses
                  - addresses
                  isDynamic: true
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                - subnetId: subnetId
                  addresses:
                  - addresses
                  - addresses
                  isDynamic: true
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                segmentationId: segmentationId
              layerProtocol: IP_OVER_ETHERNET
            cpdId: null
            associatedVnfVirtualLinkId: null
            cpConfigId: null
            vnfdId: null
            associatedVnfcCpId: null
            id: id
            extLinkPortId: null
          - metadata: null
            cpProtocolInfo:
            - ipOverEthernet:
                macAddress: macAddress
                ipAddresses:
                - subnetId: subnetId
                  addresses:
                  - addresses
                  - addresses
                  isDynamic: true
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                - subnetId: subnetId
                  addresses:
                  - addresses
                  - addresses
                  isDynamic: true
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                segmentationId: segmentationId
              layerProtocol: IP_OVER_ETHERNET
            - ipOverEthernet:
                macAddress: macAddress
                ipAddresses:
                - subnetId: subnetId
                  addresses:
                  - addresses
                  - addresses
                  isDynamic: true
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                - subnetId: subnetId
                  addresses:
                  - addresses
                  - addresses
                  isDynamic: true
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                segmentationId: segmentationId
              layerProtocol: IP_OVER_ETHERNET
            cpdId: null
            associatedVnfVirtualLinkId: null
            cpConfigId: null
            vnfdId: null
            associatedVnfcCpId: null
            id: id
            extLinkPortId: null
          virtualStorageResourceInfo:
          - metadata: null
            reservationId: null
            virtualStorageDescId: null
            vnfdId: null
            zoneId: null
            id: null
            storageResource: null
          - metadata: null
            reservationId: null
            virtualStorageDescId: null
            vnfdId: null
            zoneId: null
            id: null
            storageResource: null
        vnfInstanceName: vnfInstanceName
        id: id
        vnfSoftwareVersion: vnfSoftwareVersion
    ExtManagedVirtualLinkInfo:
      required:
      - id
      - networkResource
      - vnfVirtualLinkDescId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        vnfVirtualLinkDescId:
          $ref: '#/components/schemas/IdentifierInVnf'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        networkResource:
          $ref: '#/components/schemas/ResourceHandle'
        vnfLinkPorts:
          type: array
          description: |
            Link ports of this VL.
          items:
            $ref: '#/components/schemas/VnfLinkPortInfo'
        extManagedMultisiteVirtualLinkId:
          $ref: '#/components/schemas/Identifier'
      example:
        networkResource: null
        vnfdId: null
        id: null
        vnfVirtualLinkDescId: null
        extManagedMultisiteVirtualLinkId: null
        vnfLinkPorts:
        - resourceHandle: null
          cpInstanceType: VNFC_CP
          id: null
          cpInstanceId: null
        - resourceHandle: null
          cpInstanceType: VNFC_CP
          id: null
          cpInstanceId: null
    VnfcResourceInfo:
      required:
      - computeResource
      - id
      - vduId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        vduId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        computeResource:
          $ref: '#/components/schemas/ResourceHandle'
        zoneId:
          $ref: '#/components/schemas/Identifier'
        storageResourceIds:
          type: array
          description: |
            References to the VirtualStorage resources. The value refers to a VirtualStorageResourceInfo item in the VnfInstance.
          items:
            $ref: '#/components/schemas/IdentifierInVnf'
        reservationId:
          $ref: '#/components/schemas/Identifier'
        vnfcCpInfo:
          type: array
          description: |
            All the CPs of the VNFC instance. Shall be present when that particular CP of the VNFC instance is exposed as an external CP of the VNF instance or is connected to an external CP of the VNF instance. A VNFC CP is "connected to" an external CP if the VNFC CP is connected to an internal VL that exposes an external CP. A VNFC CP is "exposed as" an external CP if it is connected directly to an external VL. May be present otherwise.
          items:
            $ref: '#/components/schemas/VnfcResourceInfo_vnfcCpInfo'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents the information on virtualised compute and storage resources used by a VNFC in a VNF instance.
      example:
        metadata: null
        storageResourceIds:
        - null
        - null
        reservationId: null
        vnfcCpInfo:
        - metadata: null
          cpProtocolInfo:
          - null
          - null
          cpdId: null
          id: null
          vnfExtCpId: null
          vnfLinkPortId: null
        - metadata: null
          cpProtocolInfo:
          - null
          - null
          cpdId: null
          id: null
          vnfExtCpId: null
          vnfLinkPortId: null
        vnfdId: null
        zoneId: null
        id: null
        vduId: null
        computeResource: null
    VnfVirtualLinkResourceInfo:
      required:
      - id
      - networkResource
      - vnfVirtualLinkDescId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        vnfVirtualLinkDescId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        networkResource:
          $ref: '#/components/schemas/ResourceHandle'
        zoneId:
          $ref: '#/components/schemas/Identifier'
        reservationId:
          $ref: '#/components/schemas/Identifier'
        vnfLinkPorts:
          type: array
          description: |
            Links ports of this VL. Shall be present when the linkPort is used for external connectivity by the VNF (refer to VnfLinkPortInfo). May be present otherwise.
          items:
            $ref: '#/components/schemas/VnfLinkPortInfo'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents the information that allows addressing a virtualised resource that is used by an internal VL instance in a VNF instance.
      example:
        metadata: null
        reservationId: null
        networkResource: null
        vnfdId: null
        zoneId: null
        id: null
        vnfVirtualLinkDescId: null
        vnfLinkPorts:
        - null
        - null
    VirtualStorageResourceInfo:
      required:
      - id
      - storageResource
      - virtualStorageDescId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        virtualStorageDescId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        storageResource:
          $ref: '#/components/schemas/ResourceHandle'
        zoneId:
          $ref: '#/components/schemas/Identifier'
        reservationId:
          $ref: '#/components/schemas/Identifier'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents the information that allows addressing a virtualised resource that is used by a VNF instance.
      example:
        metadata: null
        reservationId: null
        virtualStorageDescId: null
        vnfdId: null
        zoneId: null
        id: null
        storageResource: null
    VnfLcmOpOcc:
      required:
      - id
      - isAutomaticInvocation
      - isCancelPending
      - operation
      - operationState
      - startTime
      - stateEnteredTime
      - vnfInstanceId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        operationState:
          $ref: '#/components/schemas/LcmOperationStateType'
        stateEnteredTime:
          $ref: '#/components/schemas/DateTime'
        startTime:
          $ref: '#/components/schemas/DateTime'
        vnfInstanceId:
          $ref: '#/components/schemas/Identifier'
        grantId:
          $ref: '#/components/schemas/Identifier'
        operation:
          $ref: '#/components/schemas/LcmOperationType'
        isAutomaticInvocation:
          $ref: '#/components/schemas/Boolean'
        operationParams:
          type: object
          description: "Input parameters of the LCM operation. This attribute shall\
            \ be formatted according to the request data type of the related LCM operation.\
            \ The following mapping between operationType and the data type of this\
            \ attribute shall apply: * INSTANTIATE: InstantiateVnfRequest * SCALE:\
            \ ScaleVnfRequest * SCALE_TO_LEVEL: ScaleVnfToLevelRequest * CHANGE_FLAVOUR:\
            \ ChangeVnfFlavourRequest * OPERATE: OperateVnfRequest * HEAL: HealVnfRequest\
            \ * CHANGE_EXT_CONN: ChangeExtVnfConnectivityRequest * TERMINATE: TerminateVnfRequest\
            \ * MODIFY_INFO: VnfInfoModifications * CREATE_SNAPSHOT: CreateVnfSnapshotRequest\
            \ * REVERT_TO_SNAPSHOT: RevertToVnfSnapshotRequest * CHANGE_VNFPKG: ChangeCurrentVnfPkgRequest\n"
        isCancelPending:
          $ref: '#/components/schemas/Boolean'
        cancelMode:
          $ref: '#/components/schemas/CancelModeType'
        error:
          $ref: '#/components/schemas/ProblemDetails'
        resourceChanges:
          $ref: '#/components/schemas/VnfLcmOpOcc_resourceChanges'
        changedInfo:
          $ref: '#/components/schemas/VnfInfoModifications'
        changedExtConnectivity:
          type: array
          description: "Information about changed external connectivity, if applicable.\
            \ This allows the NFVO to obtain the information contained in the latest\
            \ \"result\" notification if it has not received it due to an error or\
            \ a wrongly configured subscription filter.\n"
          items:
            $ref: '#/components/schemas/ExtVirtualLinkInfo'
        modificationsTriggeredByVnfPkgChange:
          $ref: '#/components/schemas/ModificationsTriggeredByVnfPkgChange'
        vnfSnapshotInfoId:
          $ref: '#/components/schemas/Identifier'
        _links:
          $ref: '#/components/schemas/VnfLcmOpOcc__links'
      description: "This type represents a VNF lifecycle management operation occurrence.\
        \ Shall be set to the value of the \"id\" attribute in the \"Grant\" representing\
        \ the associated \"Individual Grant\", if such grant exists.\n"
      example:
        grantId: null
        _links:
          cancel: null
          rollback: null
          vnfSnapshot: null
          fail: null
          self:
            href: href
          grant: null
          vnfInstance: null
          retry: null
        operationState: STARTING
        error:
          instance: instance
          detail: detail
          type: type
          title: title
          status: 0
        vnfInstanceId: null
        resourceChanges:
          affectedVirtualLinks:
          - resourceDefinitionId: null
            metadata: null
            networkResource: null
            changeType: ADDED
            vnfdId: null
            zoneId: null
            id: null
            vnfVirtualLinkDescId: null
            vnfLinkPortIds:
            - null
            - null
          - resourceDefinitionId: null
            metadata: null
            networkResource: null
            changeType: ADDED
            vnfdId: null
            zoneId: null
            id: null
            vnfVirtualLinkDescId: null
            vnfLinkPortIds:
            - null
            - null
          affectedVirtualStorages:
          - resourceDefinitionId: null
            metadata: null
            virtualStorageDescId: null
            changeType: ADDED
            vnfdId: null
            zoneId: null
            id: null
            storageResource: null
          - resourceDefinitionId: null
            metadata: null
            virtualStorageDescId: null
            changeType: ADDED
            vnfdId: null
            zoneId: null
            id: null
            storageResource: null
          affectedVnfcs:
          - resourceDefinitionId: resourceDefinitionId
            addedStorageResourceIds:
            - null
            - null
            metadata: {}
            changeType: ADDED
            vnfdId: null
            zoneId: null
            affectedVnfcCpIds:
            - null
            - null
            id: id
            vduId: vduId
            computeResource:
              resourceId: null
              vimConnectionId: null
              vimLevelResourceType: vimLevelResourceType
              resourceProviderId: null
            removedStorageResourceIds:
            - null
            - null
          - resourceDefinitionId: resourceDefinitionId
            addedStorageResourceIds:
            - null
            - null
            metadata: {}
            changeType: ADDED
            vnfdId: null
            zoneId: null
            affectedVnfcCpIds:
            - null
            - null
            id: id
            vduId: vduId
            computeResource:
              resourceId: null
              vimConnectionId: null
              vimLevelResourceType: vimLevelResourceType
              resourceProviderId: null
            removedStorageResourceIds:
            - null
            - null
          affectedExtLinkPorts:
          - resourceDefinitionId: null
            resourceHandle: null
            extCpInstanceId: null
            changeType: ADDED
            id: null
          - resourceDefinitionId: null
            resourceHandle: null
            extCpInstanceId: null
            changeType: ADDED
            id: null
        cancelMode: GRACEFUL
        vnfSnapshotInfoId: null
        operationParams: {}
        modificationsTriggeredByVnfPkgChange:
          vnfProductName: vnfProductName
          metadata: null
          extensions: null
          vnfdVersion: null
          vnfProvider: vnfProvider
          vnfConfigurableProperties: null
          vnfdId: null
          vnfSoftwareVersion: null
        stateEnteredTime: 2000-01-23T04:56:07.000+00:00
        changedInfo:
          vnfProductName: null
          metadata: null
          extensions: null
          vimConnectionInfo:
            key:
              vimType: vimType
              vimId: null
              extra: null
              interfaceInfo: null
              accessInfo: null
          vnfdVersion: null
          vnfProvider: null
          vnfConfigurableProperties: null
          vnfdId: null
          vnfInstanceName: vnfInstanceName
          vnfInstanceDescription: null
          vnfSoftwareVersion: vnfSoftwareVersion
        changedExtConnectivity:
        - resourceHandle:
            resourceId: null
            vimConnectionId: null
            vimLevelResourceType: vimLevelResourceType
            resourceProviderId: null
          extLinkPorts:
          - resourceHandle: null
            id: null
            cpInstanceId: null
          - resourceHandle: null
            id: null
            cpInstanceId: null
          id: null
          currentVnfExtCpData:
          - cpdId: null
            cpConfig:
              key:
                linkPortId: null
                cpProtocolData:
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                parentCpConfigId: null
          - cpdId: null
            cpConfig:
              key:
                linkPortId: null
                cpProtocolData:
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                parentCpConfigId: null
        - resourceHandle:
            resourceId: null
            vimConnectionId: null
            vimLevelResourceType: vimLevelResourceType
            resourceProviderId: null
          extLinkPorts:
          - resourceHandle: null
            id: null
            cpInstanceId: null
          - resourceHandle: null
            id: null
            cpInstanceId: null
          id: null
          currentVnfExtCpData:
          - cpdId: null
            cpConfig:
              key:
                linkPortId: null
                cpProtocolData:
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                parentCpConfigId: null
          - cpdId: null
            cpConfig:
              key:
                linkPortId: null
                cpProtocolData:
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                parentCpConfigId: null
        startTime: null
        id: id
        isAutomaticInvocation: true
        operation: INSTANTIATE
        isCancelPending: null
      oneOf:
      - required:
        - changedInfo
      - required:
        - modificationsTriggeredByVnfPkgChange
    AffectedVnfc:
      required:
      - changeType
      - computeResource
      - id
      - vduId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        vduId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        changeType:
          type: string
          description: "Signals the type of change. Permitted values: * ADDED * REMOVED\
            \ * MODIFIED * TEMPORARY For a temporary resource, an AffectedVnfc structure\
            \ exists as long as the temporary resource exists.\n"
          enum:
          - ADDED
          - REMOVED
          - MODIFIED
          - TEMPORARY
        computeResource:
          $ref: '#/components/schemas/ResourceHandle'
        resourceDefinitionId:
          $ref: '#/components/schemas/IdentifierLocal'
        zoneId:
          $ref: '#/components/schemas/Identifier'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
        affectedVnfcCpIds:
          type: array
          description: |
            Identifiers of CP(s) of the VNFC instance that were affected by the change. Shall be present for those affected CPs of the VNFC instance that are associated to an external CP of the VNF instance. May be present for further affected CPs of the VNFC instance.
          items:
            $ref: '#/components/schemas/IdentifierInVnf'
        addedStorageResourceIds:
          type: array
          description: |
            References to VirtualStorage resources that have been added. Each value refers to a VirtualStorageResourceInfo item in the VnfInstance that was added to the VNFC. It shall be provided if at least one storage resource was added to the VNFC.
          items:
            $ref: '#/components/schemas/IdentifierInVnf'
        removedStorageResourceIds:
          type: array
          description: "References to VirtualStorage resources that have been removed.\
            \ The value contains the identifier of a VirtualStorageResourceInfo item\
            \ that has been removed from the VNFC, and might no longer exist in the\
            \ VnfInstance. It shall be provided if at least one storage resource was\
            \ removed from the VNFC.\n"
          items:
            $ref: '#/components/schemas/IdentifierInVnf'
      description: "This type provides information about added, deleted, modified\
        \ and temporary VNFCs.\n"
      example:
        resourceDefinitionId: resourceDefinitionId
        addedStorageResourceIds:
        - null
        - null
        metadata: {}
        changeType: ADDED
        vnfdId: null
        zoneId: null
        affectedVnfcCpIds:
        - null
        - null
        id: id
        vduId: vduId
        computeResource:
          resourceId: null
          vimConnectionId: null
          vimLevelResourceType: vimLevelResourceType
          resourceProviderId: null
        removedStorageResourceIds:
        - null
        - null
    AffectedVirtualLink:
      required:
      - changeType
      - id
      - networkResource
      - vnfVirtualLinkDescId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        vnfVirtualLinkDescId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        changeType:
          type: string
          description: "Signals the type of change. Permitted values: * ADDED * REMOVED\
            \ * MODIFIED * TEMPORARY * LINK_PORT_ADDED * LINK_PORT_REMOVED For a temporary\
            \ resource, an AffectedVirtualLink structure exists as long as the temporary\
            \ resource exists. When signalling the addition (LINK_PORT_ADDED) or removal\
            \ (LINK_PORT_REMOVED) of VNF link ports, the \"networkResource\" attribute\
            \ refers to the affected virtual link instance, not the link port instance.\
            \ The resource handles of the affected VNF link ports can be found by\
            \ dereferencing the identifiers in the \"vnfLinkPortIds\" attribute.\n"
          enum:
          - ADDED
          - REMOVED
          - MODIFIED
          - TEMPORARY
          - LINK_PORT_ADDED
          - LINK_PORT_REMOVED
        networkResource:
          $ref: '#/components/schemas/ResourceHandle'
        vnfLinkPortIds:
          type: array
          description: "Identifiers of the link ports of the affected VL (reference\
            \ to the vnfLinkPortInfo) related to the change. Each identifier references\
            \ a \"VnfLinkPortInfo\" structure. Shall be set when changeType is equal\
            \ to \"LINK_PORT_ADDED\" or \"LINK_PORT_REMOVED\", and the related “VnfLinkPortInfo”\
            \ structures are present (case \"added\") or have been present (case \"\
            removed\") in the “VnfVirtualLinkResourceInfo” or \"ExtManagedVirtualLinkInfo\"\
            \ structures that are represented by the \"vnfVirtualLinkResourceInfo\"\
            \ or \"extManagedVirtualLinkInfo\" attribute in the \"VnfInstance\" structure.\
            \ When signalling the addition (LINK_PORT_ADDED) or removal (LINK_PORT_REMOVED)\
            \ of VNF link ports, the \"networkResource\" attribute refers to the affected\
            \ virtual link instance, not the link port instance. The resource handles\
            \ of the affected VNF link ports can be found by dereferencing the identifiers\
            \ in the \"vnfLinkPortIds\" attribute.\n"
          items:
            $ref: '#/components/schemas/IdentifierInVnfd'
        resourceDefinitionId:
          $ref: '#/components/schemas/IdentifierLocal'
        zoneId:
          $ref: '#/components/schemas/Identifier'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
      description: "This type provides information about added, deleted, modified\
        \ and temporary VLs, and added or removed VNF link ports.\n"
      example:
        resourceDefinitionId: null
        metadata: null
        networkResource: null
        changeType: ADDED
        vnfdId: null
        zoneId: null
        id: null
        vnfVirtualLinkDescId: null
        vnfLinkPortIds:
        - null
        - null
    AffectedExtLinkPort:
      required:
      - changeType
      - extCpInstanceId
      - id
      - resourceHandle
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        changeType:
          type: string
          description: "Signals the type of change. Permitted values: -\tADDED -\t\
            REMOVED\n"
          enum:
          - ADDED
          - REMOVED
        extCpInstanceId:
          $ref: '#/components/schemas/IdentifierInVnf'
        resourceHandle:
          $ref: '#/components/schemas/ResourceHandle'
        resourceDefinitionId:
          $ref: '#/components/schemas/IdentifierLocal'
      description: |
        This type provides information about added and deleted external link ports (link ports attached to external virtual links).
      example:
        resourceDefinitionId: null
        resourceHandle: null
        extCpInstanceId: null
        changeType: ADDED
        id: null
    AffectedVirtualStorage:
      required:
      - changeType
      - id
      - storageResource
      - virtualStorageDescId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        virtualStorageDescId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        changeType:
          type: string
          description: "Signals the type of change. Permitted values: * ADDED * REMOVED\
            \ * MODIFIED * TEMPORARY For a temporary resource, an AffectedVirtualStorage\
            \ structure exists as long as the temporary resource exists.\n"
          enum:
          - ADDED
          - REMOVED
          - MODIFIED
          - TEMPORARY
        storageResource:
          $ref: '#/components/schemas/ResourceHandle'
        resourceDefinitionId:
          $ref: '#/components/schemas/IdentifierLocal'
        zoneId:
          $ref: '#/components/schemas/Identifier'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
      description: "This type provides information about added, deleted, modified\
        \ and temporary virtual storage resources.\n"
      example:
        resourceDefinitionId: null
        metadata: null
        virtualStorageDescId: null
        changeType: ADDED
        vnfdId: null
        zoneId: null
        id: null
        storageResource: null
    VnfInfoModifications:
      type: object
      properties:
        vnfInstanceName:
          $ref: '#/components/schemas/String'
        vnfInstanceDescription:
          $ref: '#/components/schemas/String'
        vnfConfigurableProperties:
          $ref: '#/components/schemas/KeyValuePairs'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
        extensions:
          $ref: '#/components/schemas/KeyValuePairs'
        vimConnectionInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VimConnectionInfo'
          description: "If present, this attribute signals modifications the \"vimConnectionInfo\"\
            \  attribute array in \"VnfInstance\".\n"
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        vnfProvider:
          $ref: '#/components/schemas/String'
        vnfProductName:
          $ref: '#/components/schemas/String'
        vnfSoftwareVersion:
          $ref: '#/components/schemas/Version'
        vnfdVersion:
          $ref: '#/components/schemas/Version'
      description: "This type represents attribute modifications that were performed\
        \ on an \"Individual VNF instance\" resource. The attributes that can be included\
        \ consist of those requested to be modified explicitly in the \"VnfInfoModificationRequest\"\
        \ data structure, and additional attributes of the \"VnfInstance\" data structure\
        \ that were modified implicitly e.g. when modifying the referenced VNF package.\n"
      example:
        vnfProductName: null
        metadata: null
        extensions: null
        vimConnectionInfo:
          key:
            vimType: vimType
            vimId: null
            extra: null
            interfaceInfo: null
            accessInfo: null
        vnfdVersion: null
        vnfProvider: null
        vnfConfigurableProperties: null
        vnfdId: null
        vnfInstanceName: vnfInstanceName
        vnfInstanceDescription: null
        vnfSoftwareVersion: vnfSoftwareVersion
    LccnSubscription:
      required:
      - _links
      - callbackUri
      - id
      - verbosity
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        filter:
          $ref: '#/components/schemas/LifecycleChangeNotificationsFilter'
        callbackUri:
          $ref: '#/components/schemas/Uri'
        verbosity:
          $ref: '#/components/schemas/LcmOpOccNotificationVerbosityType'
        _links:
          $ref: '#/components/schemas/LccnSubscription__links'
      description: |
        This type represents a subscription related to notifications about VNF lifecycle changes.
      example:
        filter:
          operationStates:
          - STARTING
          - STARTING
          vnfInstanceSubscriptionFilter:
            vnfdIds:
            - null
            - null
            vnfProductsFromProviders:
            - vnfProducts:
              - vnfProductName: vnfProductName
                versions:
                - vnfSoftwareVersion: vnfSoftwareVersion
                  vnfdVersions:
                  - null
                  - null
                - vnfSoftwareVersion: vnfSoftwareVersion
                  vnfdVersions:
                  - null
                  - null
              - vnfProductName: vnfProductName
                versions:
                - vnfSoftwareVersion: vnfSoftwareVersion
                  vnfdVersions:
                  - null
                  - null
                - vnfSoftwareVersion: vnfSoftwareVersion
                  vnfdVersions:
                  - null
                  - null
              vnfProvider: vnfProvider
            - vnfProducts:
              - vnfProductName: vnfProductName
                versions:
                - vnfSoftwareVersion: vnfSoftwareVersion
                  vnfdVersions:
                  - null
                  - null
                - vnfSoftwareVersion: vnfSoftwareVersion
                  vnfdVersions:
                  - null
                  - null
              - vnfProductName: vnfProductName
                versions:
                - vnfSoftwareVersion: vnfSoftwareVersion
                  vnfdVersions:
                  - null
                  - null
                - vnfSoftwareVersion: vnfSoftwareVersion
                  vnfdVersions:
                  - null
                  - null
              vnfProvider: vnfProvider
            vnfInstanceNames:
            - vnfInstanceNames
            - vnfInstanceNames
            vnfInstanceIds:
            - null
            - null
          notificationTypes:
          - VnfLcmOperationOccurrenceNotification
          - VnfLcmOperationOccurrenceNotification
          operationTypes:
          - INSTANTIATE
          - INSTANTIATE
        _links:
          self:
            href: href
        callbackUri: callbackUri
        id: id
        verbosity: FULL
    LifecycleChangeNotificationsFilter:
      type: object
      properties:
        vnfInstanceSubscriptionFilter:
          $ref: '#/components/schemas/VnfInstanceSubscriptionFilter'
        notificationTypes:
          type: array
          description: "Match particular notification types. Permitted values: * VnfLcmOperationOccurrenceNotification\
            \ * VnfIdentifierCreationNotification * VnfIdentifierDeletionNotification\
            \ The permitted values of the \"notificationTypes\" attribute are spelled\
            \ exactly as the names of the notification types to facilitate automated\
            \ code generation systems.\n"
          items:
            type: string
            enum:
            - VnfLcmOperationOccurrenceNotification
            - VnfIdentifierCreationNotification
            - VnfIdentifierDeletionNotification
        operationTypes:
          type: array
          description: "Match particular VNF lifecycle operation types for the notification\
            \ of type VnfLcmOperationOccurrenceNotification. May be present if the\
            \ \"notificationTypes\" attribute contains the value \"VnfLcmOperationOccurrenceNotification\"\
            , and shall be absent otherwise.\n"
          items:
            $ref: '#/components/schemas/LcmOperationType'
        operationStates:
          type: array
          description: "Match particular LCM operation state values as reported in\
            \ notifications of type VnfLcmOperationOccurrenceNotification. May be\
            \ present if the \"notificationTypes\" attribute contains the value \"\
            VnfLcmOperationOccurrenceNotification\", and shall be absent otherwise.\n"
          items:
            $ref: '#/components/schemas/LcmOperationStateType'
      description: "This type represents a subscription filter related to notifications\
        \ about VNF lifecycle changes. At a particular nesting level in the filter\
        \ structure, the following applies: All attributes shall match in order for\
        \ the filter to match (logical \"and\" between different filter attributes).\
        \ If an attribute is an array, the attribute shall match if at least one of\
        \ the values in the array matches (logical \"or\" between the values of one\
        \ filter attribute).\n"
      example:
        operationStates:
        - STARTING
        - STARTING
        vnfInstanceSubscriptionFilter:
          vnfdIds:
          - null
          - null
          vnfProductsFromProviders:
          - vnfProducts:
            - vnfProductName: vnfProductName
              versions:
              - vnfSoftwareVersion: vnfSoftwareVersion
                vnfdVersions:
                - null
                - null
              - vnfSoftwareVersion: vnfSoftwareVersion
                vnfdVersions:
                - null
                - null
            - vnfProductName: vnfProductName
              versions:
              - vnfSoftwareVersion: vnfSoftwareVersion
                vnfdVersions:
                - null
                - null
              - vnfSoftwareVersion: vnfSoftwareVersion
                vnfdVersions:
                - null
                - null
            vnfProvider: vnfProvider
          - vnfProducts:
            - vnfProductName: vnfProductName
              versions:
              - vnfSoftwareVersion: vnfSoftwareVersion
                vnfdVersions:
                - null
                - null
              - vnfSoftwareVersion: vnfSoftwareVersion
                vnfdVersions:
                - null
                - null
            - vnfProductName: vnfProductName
              versions:
              - vnfSoftwareVersion: vnfSoftwareVersion
                vnfdVersions:
                - null
                - null
              - vnfSoftwareVersion: vnfSoftwareVersion
                vnfdVersions:
                - null
                - null
            vnfProvider: vnfProvider
          vnfInstanceNames:
          - vnfInstanceNames
          - vnfInstanceNames
          vnfInstanceIds:
          - null
          - null
        notificationTypes:
        - VnfLcmOperationOccurrenceNotification
        - VnfLcmOperationOccurrenceNotification
        operationTypes:
        - INSTANTIATE
        - INSTANTIATE
    LcmOperationStateType:
      type: string
      description: "STARTING: The LCM operation is starting. PROCESSING: The LCM operation\
        \ is currently in execution. COMPLETED: The LCM operation has been completed\
        \ successfully. FAILED_TEMP: The LCM operation has failed and execution has\
        \ stopped, but the execution of the operation is not considered to be closed.\
        \ FAILED: The LCM operation has failed and it cannot be retried or rolled\
        \ back, as it is determined that such action won't succeed. ROLLING_BACK:\
        \ The LCM operation is currently being rolled back. ROLLED_BACK: The LCM operation\
        \ has been successfully rolled back, i.e. The state of the VNF prior to the\
        \ original operation invocation has been restored as closely as possible.\n"
      enum:
      - STARTING
      - PROCESSING
      - COMPLETED
      - FAILED_TEMP
      - FAILED
      - ROLLING_BACK
      - ROLLED_BACK
    LcmOpOccNotificationVerbosityType:
      type: string
      description: "The enumeration LcmOpOccNotificationVerbosityType provides values\
        \ to control the verbosity of LCM operation occurrence notifications. * FULL:\
        \ This signals a full notification which contains all change details. * SHORT:\
        \ This signals a short notification which omits large-volume change details\
        \ to reduce the size of data to\n         be sent via the notification mechanism.\n"
      enum:
      - FULL
      - SHORT
    VnfSnapshotInfo:
      required:
      - _links
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        vnfSnapshotPkgId:
          $ref: '#/components/schemas/Identifier'
        vnfSnapshot:
          $ref: '#/components/schemas/VnfSnapshot'
        _links:
          $ref: '#/components/schemas/VnfSnapshotInfo__links'
      description: |
        This type represents an "Individual VNF snapshot" resource. It shall comply with the provisions defined in table 5.5.2.22-1.
    VnfSnapshot:
      required:
      - creationStartedAt
      - id
      - vnfInstance
      - vnfInstanceId
      - vnfcSnapshots
      - vnfdId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        vnfInstanceId:
          $ref: '#/components/schemas/Identifier'
        creationStartedAt:
          $ref: '#/components/schemas/DateTime'
        creationFinishedAt:
          $ref: '#/components/schemas/DateTime'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        vnfInstance:
          $ref: '#/components/schemas/VnfInstance'
        vnfcSnapshots:
          type: array
          description: |
            Information about VNFC snapshots constituting this VNF snapshot.
          items:
            $ref: '#/components/schemas/VnfcSnapshotInfo'
        vnfStateSnapshotInfo:
          $ref: '#/components/schemas/VnfStateSnapshotInfo'
        userDefinedData:
          $ref: '#/components/schemas/KeyValuePairs'
        _links:
          $ref: '#/components/schemas/VnfSnapshot__links'
      description: |
        This type represents a VNF snapshot. It shall comply with the provisions defined in table 5.5.2.23-1.
    VnfcSnapshotInfo:
      required:
      - creationStartedAt
      - id
      - vnfcInstanceId
      - vnfcResourceInfoId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierLocal'
        vnfcInstanceId:
          $ref: '#/components/schemas/IdentifierInVnf'
        creationStartedAt:
          $ref: '#/components/schemas/DateTime'
        creationFinishedAt:
          $ref: '#/components/schemas/DateTime'
        vnfcResourceInfoId:
          $ref: '#/components/schemas/IdentifierInVnf'
        computeSnapshotResource:
          $ref: '#/components/schemas/ResourceHandle'
        storageSnapshotResources:
          type: array
          description: |
            Mapping of the storage resources associated to the VNFC with the storage snapshot resources.
          items:
            $ref: '#/components/schemas/VnfcSnapshotInfo_storageSnapshotResources'
        userDefinedData:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents a VNFC snapshot.
    VnfStateSnapshotInfo:
      required:
      - checksum
      - isEncrypted
      type: object
      properties:
        checksum:
          description: "Checksum of the VNF state snapshot file. Hash algorithms applicable\
            \ to VNF snapshot package artifacts are defined in ETSI GS NFV-SOL 010.\
            \ $ref: \"../definitions/SOL002SOL003_def.yaml#/definitions/Checksum\"\
            \n"
        isEncrypted:
          description: "Reflects whether the VNF state snapshot content is encrypted\
            \ (true) or not (false). $ref: \"../definitions/SOL002SOL003_def.yaml#/definitions/Boolean\"\
            \n"
        metadata:
          description: "The metadata with additional information such as content type,\
            \ size, creation date, etc. $ref: \"../definitions/SOL002SOL003_def.yaml#/definitions/KeyValuePairs\"\
            \n"
      description: |
        This type represents information about VNF-specific state snapshot data.
    VnfSnapshotInfoModifications:
      type: object
      properties:
        vnfSnapshotPkgId:
          $ref: '#/components/schemas/Identifier'
        vnfSnapshot:
          $ref: '#/components/schemas/VnfSnapshot'
      description: "This type represents attribute modifications that were performed\
        \ on an \"Individual VNF snapshot\" \nresource. The attributes that can be\
        \ included consist of those requested to be modified explicitly \nin the \"\
        VnfSnapshotInfoModificationRequest\" data structure, and additional attributes\
        \ of the \n\"VnfSnapshotInfo\" data structure that were modified implicitly.\
        \ The \"VnfSnapshotInfoModifications\" \ndata type shall comply with the provisions\
        \ defined in table 5.5.2.25-1.\n"
    CreateVnfRequest:
      required:
      - vnfdId
      type: object
      properties:
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        vnfInstanceName:
          type: string
          description: |
            Human-readable name of the VNF instance to be created.
        vnfInstanceDescription:
          type: string
          description: |
            Human-readable description of the VNF instance to be created.
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
    VnfInfoModificationRequest:
      type: object
      properties:
        vnfInstanceName:
          $ref: '#/components/schemas/String'
        vnfInstanceDescription:
          $ref: '#/components/schemas/String'
        vnfPkgId:
          $ref: '#/components/schemas/Identifier'
        vnfConfigurableProperties:
          $ref: '#/components/schemas/KeyValuePairs'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
        extensions:
          $ref: '#/components/schemas/KeyValuePairs'
        vimConnectionInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VimConnectionInfo'
          description: "Modifications of the \"vimConnectionInfo\" attribute. If present,\
            \ these  modifications shall be applied according to the rules of  JSON\
            \ Merge Patch (see IETF RFC 7396 ).\n"
      description: "This type represents attribute modifications for an \"Individual\
        \ VNF instance\" resource, i.e. modifications to a resource representation\
        \ based on the \"VnfInstance\" data type.\n"
    InstantiateVnfRequest:
      required:
      - flavourId
      type: object
      properties:
        flavourId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        instantiationLevelId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        extVirtualLinks:
          type: array
          description: |
            Information about external VLs to connect the VNF to.
          items:
            $ref: '#/components/schemas/ExtVirtualLinkData'
        extManagedVirtualLinks:
          type: array
          description: "Information about internal VLs that are managed by the NFVO.\n\
            NOTES:  The indication of externally-managed internal VLs is needed in\
            \ case networks have been pre-configured  for use with certain VNFs, for\
            \ instance to ensure that these networks have certain properties such\
            \ as  security or acceleration features, or to address particular network\
            \ topologies. The present document  assumes that externally-managed internal\
            \ VLs are managed by the NFVO and created towards the VIM.\nIt is possible\
            \ to have several ExtManagedVirtualLinkData for the same VNF internal\
            \ VL in case of a  multi-site VNF spanning several VIMs. The set of ExtManagedVirtualLinkData\
            \ corresponding to the same  VNF internal VL shall indicate so by referencing\
            \ to the same VnfVirtualLinkDesc and externally-managed  multi-site VL\
            \ instance (refer to clause 4.4.1.12).\n"
          items:
            $ref: '#/components/schemas/ExtManagedVirtualLinkData'
        vimConnectionInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VimConnectionInfo'
          description: "Information about VIM connections to be used for managing\
            \ the resources for the VNF instance, or refer to external / externally-managed\
            \ virtual links. This attribute shall only be supported and may be present\
            \ if  VNF-related resource management in direct mode is applicable. The\
            \ VNFM shall apply the content of this  attribute to the \"vimConnectionInfo\"\
            \ attribute of \"VnfInstance\" according to the rules of JSON Merge Patch\
            \  (see IETF RFC 7396).\n"
        localizationLanguage:
          $ref: '#/components/schemas/String'
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
        extensions:
          $ref: '#/components/schemas/KeyValuePairs'
        vnfConfigurableProperties:
          $ref: '#/components/schemas/KeyValuePairs'
    ExtManagedVirtualLinkData:
      required:
      - id
      - resourceId
      - vnfVirtualLinkDescId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        vnfVirtualLinkDescId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vimConnectionId:
          $ref: '#/components/schemas/Identifier'
        resourceProviderId:
          $ref: '#/components/schemas/Identifier'
        resourceId:
          $ref: '#/components/schemas/IdentifierInVim'
        vnfLinkPort:
          type: array
          description: "Externally provided link ports to be used to connect VNFC\
            \ connection points to this externally-managed VL on this network resource.\
            \ If this attribute is not present, the VNFM shall create the link ports\
            \ on the externally-managed VL.\n"
          items:
            $ref: '#/components/schemas/VnfLinkPortData'
        extManagedMultisiteVirtualLinkId:
          $ref: '#/components/schemas/Identifier'
    ScaleVnfRequest:
      required:
      - aspectId
      - type
      type: object
      properties:
        type:
          type: string
          description: "Indicates the type of the scale operation requested. Permitted\
            \ values: * SCALE_OUT: adding additional VNFC instances to the VNF to\
            \ increase\n  capacity\n* SCALE_IN: removing VNFC instances from the VNF\
            \ in order to release\n  unused capacity.\n"
          enum:
          - SCALE_OUT
          - SCALE_IN
        aspectId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        numberOfSteps:
          type: integer
          description: |
            Number of scaling steps to be executed as part of this Scale VNF operation. It shall be a positive number and the default value shall be 1.
          default: 1
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
    ScaleVnfToLevelRequest:
      type: object
      properties:
        instantiationLevelId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        scaleInfo:
          type: array
          description: "For each scaling aspect of the current deployment flavour,\
            \ indicates the target scale level to which the VNF is to be scaled. Either\
            \ the instantiationLevelId attribute or the scaleInfo attribute shall\
            \ be included.\n"
          items:
            $ref: '#/components/schemas/ScaleInfo'
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents request parameters for the "Scale VNF to Level" operation.
      anyOf:
      - oneOf:
        - required:
          - instantiationLevelId
        - required:
          - scaleInfo
    ScaleInfo:
      required:
      - aspectId
      - scaleLevel
      type: object
      properties:
        aspectId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        scaleLevel:
          type: integer
          description: |
            Indicates the scale level. The minimum value shall be 0 and the maximum value shall be <= maxScaleLevel as described in the VNFD.
      example:
        scaleLevel: 0
        aspectId: null
        vnfdId: null
    ChangeVnfFlavourRequest:
      required:
      - newFlavourId
      type: object
      properties:
        newFlavourId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        instantiationLevelId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        extVirtualLinks:
          type: array
          description: |
            Information about external VLs to connect the VNF to. Entries in the list of external VLs that are unchanged need not be supplied as part of this request.
          items:
            $ref: '#/components/schemas/ExtVirtualLinkData'
        extManagedVirtualLinks:
          type: array
          description: "Information about internal VLs that are managed by the NFVO.\n\
            NOTES:  The indication of externally-managed internal VLs is needed in\
            \ case networks have been pre-configured  for use with certain VNFs, for\
            \ instance to ensure that these networks have certain properties such\
            \ as  security or acceleration features, or to address particular network\
            \ topologies. The present document  assumes that externally-managed internal\
            \ VLs are managed by the NFVO and created towards the VIM.\nIt is possible\
            \ to have several ExtManagedVirtualLinkData for the same VNF internal\
            \ VL in case of a  multi-site VNF spanning several VIMs. The set of ExtManagedVirtualLinkData\
            \ corresponding to the same  VNF internal VL shall indicate so by referencing\
            \ to the same VnfVirtualLinkDesc and externally-managed  multi-site VL\
            \ instance (refer to clause 4.4.1.12).\n"
          items:
            $ref: '#/components/schemas/ExtManagedVirtualLinkData'
        vimConnectionInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VimConnectionInfo'
          description: "Information about VIM connections to be used for managing\
            \ the resources for the VNF instance, or refer to external / externally-managed\
            \ virtual links. This attribute shall only be supported and may be present\
            \ if  VNF-related resource management in direct mode is applicable. The\
            \ VNFM shall apply the content of this  attribute to the \"vimConnectionInfo\"\
            \ attribute of \"VnfInstance\" according to the rules of JSON Merge Patch\
            \  (see IETF RFC 7396).\n"
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
        extensions:
          $ref: '#/components/schemas/KeyValuePairs'
        vnfConfigurableProperties:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents request parameters for the "Change VNF flavour" operation.
    TerminateVnfRequest:
      required:
      - terminationType
      type: object
      properties:
        terminationType:
          type: string
          description: "Indicates whether forceful or graceful termination is requested.\
            \ Permitted values: * FORCEFUL: The VNFM will shut down the VNF and release\
            \ the\n  resources immediately after accepting the request.\n* GRACEFUL:\
            \ The VNFM will first arrange to take the VNF out of service after accepting\
            \ the request. Once the operation of taking the VNF out of service finishes\
            \ (irrespective of whether it has succeeded or failed) or once the timer\
            \ value specified in the \"gracefulTerminationTimeout\" attribute expires,\
            \ the VNFM will shut down the VNF and release the resources.\n"
          enum:
          - FORCEFUL
          - GRACEFUL
        gracefulTerminationTimeout:
          type: integer
          description: "This attribute is only applicable in case of graceful termination.\
            \ It defines the time to wait for the VNF to be taken out of service before\
            \ shutting down the VNF and releasing the resources. The unit is seconds.\
            \ If not given and the \"terminationType\" attribute is set to \"GRACEFUL\"\
            , it is expected that the VNFM waits for the successful taking out of\
            \ service of the VNF, no matter how long it takes, before shutting down\
            \ the VNF and releasing the resources.\n"
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
    HealVnfRequest:
      type: object
      properties:
        cause:
          $ref: '#/components/schemas/String'
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
    OperateVnfRequest:
      required:
      - changeStateTo
      type: object
      properties:
        changeStateTo:
          $ref: '#/components/schemas/VnfOperationalStateType'
        stopType:
          $ref: '#/components/schemas/StopType'
        gracefulStopTimeout:
          type: integer
          description: "The time interval (in seconds) to wait for the VNF to be taken\
            \ out of service during graceful stop, before stopping the VNF. The “\
            stopType” and “gracefulStopTimeout” attributes shall be absent, when the\
            \ “changeStateTo” attribute is equal to “STARTED”. The “gracefulStopTimeout”\
            \ attribute shall be present, when the “changeStateTo” is equal to “STOPPED”\
            \ and the “stopType” attribute is equal to “GRACEFUL”. The “gracefulStopTimeout”\
            \ attribute shall be absent, when the “changeStateTo” attribute is equal\
            \ to “STOPPED” and the “stopType” attribute is equal to “FORCEFUL”. The\
            \ request shall be treated as if the “stopType” attribute was set to ”\
            FORCEFUL”, when the “changeStateTo” attribute is equal to “STOPPED” and\
            \ the “stopType” attribute is absent.\n"
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents request parameters for the "Operate VNF" operation.
    StopType:
      type: string
      description: "* FORCEFUL: The VNFM will stop the VNF instance immediately after\
        \ accepting \n  the request.\n* GRACEFUL: The VNFM instance will first arrange\
        \ to take the VNF out of \n  service after accepting the request. Once that\
        \ operation is successful \n  or once the timer value specified in the \"\
        gracefulStopTimeout\" attribute\n  expires, the VNFM will stop the VNF instance.\n"
      enum:
      - FORCEFUL
      - GRACEFUL
    ChangeExtVnfConnectivityRequest:
      required:
      - extVirtualLinks
      type: object
      properties:
        extVirtualLinks:
          type: array
          description: |
            Information about external VLs to change (e.g. connect the VNF to). Entries in the list of external VLs that are unchanged need not be supplied as part of this request.
          items:
            $ref: '#/components/schemas/ExtVirtualLinkData'
        vimConnectionInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VimConnectionInfo'
          description: "Information about VIM connections to be used for managing\
            \ the resources for the VNF instance, or refer to  external virtual links.\
            \ This attribute shall only be supported and may be present if VNF-related\
            \ resource  management in direct mode is applicable. The VNFM shall apply\
            \ the content of this attribute to the  \"vimConnectionInfo\" attribute\
            \ of \"VnfInstance\" according to the rules of JSON Merge Patch (see IETF\
            \ RFC 7396).\n"
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents request parameters for the "Change external VNF connectivity" operation to modify the external connectivity of a VNF instance.
    ChangeCurrentVnfPkgRequest:
      required:
      - vnfdId
      type: object
      properties:
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        extVirtualLinks:
          type: array
          description: |
            Information about external VLs to connect the VNF to. Entries in the list  that are unchanged need not be supplied as part of this request.
          items:
            $ref: '#/components/schemas/ExtVirtualLinkData'
        extManagedVirtualLinks:
          type: array
          description: "Information about internal VLs that are managed by the NFVO.\n\
            NOTES: The indication of externally-managed internal VLs is needed in\
            \ case networks have been pre-configured for use with certain VNFs, for\
            \ instance to ensure that these networks have certain properties such\
            \ as security or acceleration features, or to address particular network\
            \ topologies. The present document assumes that externally-managed internal\
            \ VLs are managed by the NFVO and created towards the VIM. It is possible\
            \ to have several ExtManagedVirtualLinkData for the same VNF internal\
            \ VL in case of a multi-site VNF spanning several VIMs. The set of ExtManagedVirtualLinkData\
            \ corresponding to the same VNF internal VL shall indicate so by referencing\
            \ to the same VnfVirtualLinkDesc and externally-managed multi-site VL\
            \ instance (refer to clause 4.4.1.12).\n"
          items:
            $ref: '#/components/schemas/ExtManagedVirtualLinkData'
        vimConnectionInfo:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VimConnectionInfo'
          description: "Information about VIM connections to be used for managing\
            \ the resources for the VNF instance, or refer to  external virtual links.\
            \ This attribute shall only be supported and may be present if VNF-related\
            \ resource  management in direct mode is applicable. The VNFM shall apply\
            \ the content of this attribute to the  \"vimConnectionInfo\" attribute\
            \ of \"VnfInstance\" according to the rules of JSON Merge Patch (see IETF\
            \ RFC 7396).\n"
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
        extensions:
          $ref: '#/components/schemas/KeyValuePairs'
        vnfConfigurableProperties:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents request parameters for the "Change current VNF package"  operation to replace the VNF package on which a VNF instance is based.
    LccnSubscriptionRequest:
      required:
      - callbackUri
      type: object
      properties:
        filter:
          $ref: '#/components/schemas/LifecycleChangeNotificationsFilter'
        callbackUri:
          $ref: '#/components/schemas/Uri'
        authentication:
          $ref: '#/components/schemas/SubscriptionAuthentication'
        verbosity:
          $ref: '#/components/schemas/LcmOpOccNotificationVerbosityType'
      description: |
        This type represents a subscription request related to notifications about VNF lifecycle changes.
    CreateVnfSnapshotRequest:
      required:
      - vnfSnapshotInfoId
      type: object
      properties:
        vnfSnapshotInfoId:
          $ref: '#/components/schemas/Identifier'
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
        userDefinedData:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents request parameters for the "Create VNF Snapshot"  LCM operation which takes a snapshot of a VNF instance and populates  a previously-created "Individual VNF snapshot" resource with the content  of the snapshot. It shall comply with the provisions defined in table 5.5.2.21-1.
    RevertToVnfSnapshotRequest:
      required:
      - vnfSnapshotInfoId
      type: object
      properties:
        vnfSnapshotInfoId:
          $ref: '#/components/schemas/Identifier'
        additionalParams:
          $ref: '#/components/schemas/KeyValuePairs'
      description: |
        This type represents request parameters for the "Revert to VNF Snapshot" operation.
    CreateVnfSnapshotInfoRequest:
      type: object
      properties:
        vnfSnapshotPkgId:
          $ref: '#/components/schemas/Identifier'
        vnfSnapshot:
          $ref: '#/components/schemas/VnfSnapshot'
      description: |
        This type represents request parameters for the creation of an "Individual VNF snapshot" resource which can be
        populated with content obtained by invoking the "Create VNF snapshot" LCM operation or extracted from a
        VNF snapshot package. It shall comply with the provisions defined in table 5.5.2.20-1.
    VnfSnapshotInfoModificationRequest:
      type: object
      properties:
        vnfSnapshotPkgId:
          $ref: '#/components/schemas/Identifier'
        vnfSnapshot:
          $ref: '#/components/schemas/VnfSnapshot'
      description: "This type represents attribute modifications for an \"Individual\
        \ VNF snapshot\" resource, i.e. modifications \nto a resource representation\
        \ based on the \"VnfSnapshotInfo\" data type. The attributes of \"VnfSnapshotInfo\"\
        \ \nthat can be modified according to the provisions in clause 5.5.2.22 are\
        \ included in the \n\"VnfSnapshotInfoModificationRequest\" data type. The\
        \ \"VnfSnapshotInfoModificationRequest\" data type shall \ncomply with the\
        \ provisions defined in table 5.5.2.24-1.\n"
    Identifier:
      type: string
      description: |
        An identifier with the intention of being globally unique.
    Version:
      type: string
      description: |
        A version.
    KeyValuePairs:
      type: object
      description: "This type represents a list of key-value pairs. The order of the\
        \ pairs in the list is not significant. In JSON, a set of keyvalue pairs is\
        \ represented as an object. It shall comply with the provisions defined in\
        \ clause 4 of IETF RFC 8259. In the following example, a list of key-value\
        \ pairs with four keys (\"aString\", \"aNumber\", \"anArray\" and \"anObject\"\
        ) is provided to illustrate that the values associated with different keys\
        \ can be of different type.\n"
    VimConnectionInfo:
      required:
      - vimType
      type: object
      properties:
        vimId:
          $ref: '#/components/schemas/Identifier'
        vimType:
          type: string
          description: "Discriminator for the different types of the VIM information.\
            \ The value of this attribute determines the structure of the \"interfaceInfo\"\
            \ and \"accessInfo\" attributes, based on the type of the VIM. The set\
            \ of permitted values is expected to change over time as new types or\
            \ versions of VIMs become available. The ETSI NFV registry of VIM-related\
            \ information provides access to information about VimConnectionInfo definitions\
            \ for various VIM types. The structure of the registry is defined in Annex\
            \ C of SOL003.\n"
        interfaceInfo:
          $ref: '#/components/schemas/KeyValuePairs'
        accessInfo:
          $ref: '#/components/schemas/KeyValuePairs'
        extra:
          $ref: '#/components/schemas/KeyValuePairs'
      description: "This type represents parameters to connect to a VIM for managing\
        \ the resources of a VNF instance. This structure is used to convey VIM-related\
        \ parameters over the Or-Vnfm interface. Additional parameters for a VIM may\
        \ be configured into the VNFM by means outside the scope of the present document,\
        \ and bound to the identifier of that VIM.\n"
      example:
        vimType: vimType
        vimId: null
        extra: null
        interfaceInfo: null
        accessInfo: null
    IdentifierInVnfd:
      type: string
      description: |
        An identifier that is unique within a VNF descriptor.
    VnfOperationalStateType:
      type: string
      description: "STARTED: The VNF instance is up and running. STOPPED: The VNF\
        \ instance has been shut down.\n"
      enum:
      - STARTED
      - STOPPED
    VnfExtCpInfo:
      required:
      - cpConfigId
      - cpProtocolInfo
      - cpdId
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        cpdId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        cpConfigId:
          $ref: '#/components/schemas/IdentifierInVnf'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        cpProtocolInfo:
          type: array
          description: |
            Network protocol information for this CP.
          items:
            $ref: '#/components/schemas/CpProtocolInfo'
        extLinkPortId:
          $ref: '#/components/schemas/Identifier'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
        associatedVnfcCpId:
          $ref: '#/components/schemas/Identifier'
        associatedVnfVirtualLinkId:
          $ref: '#/components/schemas/Identifier'
      description: |
        This type represents information about an external CP of a VNF. It shall comply with the provisions defined in table 5.5.3.25 1.
      example:
        metadata: null
        cpProtocolInfo:
        - ipOverEthernet:
            macAddress: macAddress
            ipAddresses:
            - subnetId: subnetId
              addresses:
              - addresses
              - addresses
              isDynamic: true
              addressRange:
                maxAddress: null
                minAddress: null
              type: IPV4
            - subnetId: subnetId
              addresses:
              - addresses
              - addresses
              isDynamic: true
              addressRange:
                maxAddress: null
                minAddress: null
              type: IPV4
            segmentationId: segmentationId
          layerProtocol: IP_OVER_ETHERNET
        - ipOverEthernet:
            macAddress: macAddress
            ipAddresses:
            - subnetId: subnetId
              addresses:
              - addresses
              - addresses
              isDynamic: true
              addressRange:
                maxAddress: null
                minAddress: null
              type: IPV4
            - subnetId: subnetId
              addresses:
              - addresses
              - addresses
              isDynamic: true
              addressRange:
                maxAddress: null
                minAddress: null
              type: IPV4
            segmentationId: segmentationId
          layerProtocol: IP_OVER_ETHERNET
        cpdId: null
        associatedVnfVirtualLinkId: null
        cpConfigId: null
        vnfdId: null
        associatedVnfcCpId: null
        id: id
        extLinkPortId: null
      oneOf:
      - required:
        - associatedVnfcCpId
      - required:
        - associatedVnfVirtualLinkId
    CpProtocolInfo:
      required:
      - layerProtocol
      type: object
      properties:
        layerProtocol:
          type: string
          description: "The identifier of layer(s) and protocol(s) associated to the\
            \ network address information. Permitted values: IP_OVER_ETHERNET This\
            \ attribute allows to signal the addition of further types of layer and\
            \ protocol in future versions of the present document in a backwards-compatible\
            \ way. In the current version of the present document, only IP over Ethernet\
            \ is supported.\n"
          enum:
          - IP_OVER_ETHERNET
        ipOverEthernet:
          $ref: '#/components/schemas/IpOverEthernetAddressInfo'
      description: "This type describes the protocol layer(s) that a CP uses together\
        \ with protocol-related information, like addresses.\n"
      example:
        ipOverEthernet:
          macAddress: macAddress
          ipAddresses:
          - subnetId: subnetId
            addresses:
            - addresses
            - addresses
            isDynamic: true
            addressRange:
              maxAddress: null
              minAddress: null
            type: IPV4
          - subnetId: subnetId
            addresses:
            - addresses
            - addresses
            isDynamic: true
            addressRange:
              maxAddress: null
              minAddress: null
            type: IPV4
          segmentationId: segmentationId
        layerProtocol: IP_OVER_ETHERNET
    IpOverEthernetAddressInfo:
      type: object
      properties:
        macAddress:
          $ref: '#/components/schemas/MacAddress'
        segmentationId:
          type: string
          description: "Identification of the network segment to which the Cp instance\
            \ connects to. If the Cp instance represents a subport in a trunk, segmentationId\
            \ shall be present.  Otherwise it shall not be present. Depending on the\
            \ NFVI networking infrastructure, the segmentationId may indicate the\
            \ actual network segment value (e.g. vlan Id, Vxlan segmentation id, etc.)\
            \ used in the transport header of the packets or it may be an identifier\
            \ used between the application and the NFVI networking infrastructure\
            \ to identify the network sub-interface of the trunk port in question.\
            \ In the latter case the NFVI infrastructure will map this local segmentationId\
            \ to whatever segmentationId is actually used by the NFVI’s transport\
            \ technology.\n"
        ipAddresses:
          type: array
          description: |
            Addresses assigned to the CP instance. Each entry represents IP addresses assigned by fixed or dynamic IP address assignment per subnet. At least one of "macAddress" or "ipAddresses" shall be present.
          items:
            $ref: '#/components/schemas/IpOverEthernetAddressInfo_ipAddresses'
      description: |
        This type represents information about a network address that has been assigned.
      example:
        macAddress: macAddress
        ipAddresses:
        - subnetId: subnetId
          addresses:
          - addresses
          - addresses
          isDynamic: true
          addressRange:
            maxAddress: null
            minAddress: null
          type: IPV4
        - subnetId: subnetId
          addresses:
          - addresses
          - addresses
          isDynamic: true
          addressRange:
            maxAddress: null
            minAddress: null
          type: IPV4
        segmentationId: segmentationId
      anyOf:
      - required:
        - macAddress
      - required:
        - ipAddresses
      oneOf:
      - required:
        - addresses
      - required:
        - addressRange
    ExtVirtualLinkInfo:
      required:
      - currentVnfExtCpData
      - id
      - resourceHandle
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        resourceHandle:
          $ref: '#/components/schemas/ResourceHandle'
        extLinkPorts:
          type: array
          description: |
            Link ports of this VL.
          items:
            $ref: '#/components/schemas/ExtLinkPortInfo'
        currentVnfExtCpData:
          type: array
          description: "Allows the API consumer to read the current CP configuration\
            \ information for the connection of external CPs to the external virtual\
            \ link. This attribute reflects the current configuration information\
            \ that has resulted from merging into this attribute the \"VnfExtCpData\"\
            \ information which was passed as part of the \"ExtVirtualLinkData\" structure\
            \ in the input of the most recent VNF LCM operation such as \"InstantiateVnfRequest\"\
            , \"ChangeExtVnfConnectivityRequest\", \"ChangeVnfFlavourRequest\" or\
            \ \"ChangeCurrentVnfPkgRequest\", or has been provided by the NFVO during\
            \ the granting procedure. If applying such change results in an empty\
            \ list of \"currentVnfExtCpData\" structure instances, the affected instance\
            \ of \"ExtVirtualLinkInfo\" shall be removed from its parent data structure.\n"
          items:
            $ref: '#/components/schemas/VnfExtCpData'
      example:
        resourceHandle:
          resourceId: null
          vimConnectionId: null
          vimLevelResourceType: vimLevelResourceType
          resourceProviderId: null
        extLinkPorts:
        - resourceHandle: null
          id: null
          cpInstanceId: null
        - resourceHandle: null
          id: null
          cpInstanceId: null
        id: null
        currentVnfExtCpData:
        - cpdId: null
          cpConfig:
            key:
              linkPortId: null
              cpProtocolData:
              - ipOverEthernet:
                  macAddress: null
                  ipAddresses:
                  - fixedAddresses:
                    - null
                    - null
                    subnetId: null
                    addressRange:
                      maxAddress: null
                      minAddress: null
                    type: IPV4
                    numDynamicAddresses: 6
                  - fixedAddresses:
                    - null
                    - null
                    subnetId: null
                    addressRange:
                      maxAddress: null
                      minAddress: null
                    type: IPV4
                    numDynamicAddresses: 6
                  segmentationId: segmentationId
                layerProtocol: IP_OVER_ETHERNET
              - ipOverEthernet:
                  macAddress: null
                  ipAddresses:
                  - fixedAddresses:
                    - null
                    - null
                    subnetId: null
                    addressRange:
                      maxAddress: null
                      minAddress: null
                    type: IPV4
                    numDynamicAddresses: 6
                  - fixedAddresses:
                    - null
                    - null
                    subnetId: null
                    addressRange:
                      maxAddress: null
                      minAddress: null
                    type: IPV4
                    numDynamicAddresses: 6
                  segmentationId: segmentationId
                layerProtocol: IP_OVER_ETHERNET
              parentCpConfigId: null
        - cpdId: null
          cpConfig:
            key:
              linkPortId: null
              cpProtocolData:
              - ipOverEthernet:
                  macAddress: null
                  ipAddresses:
                  - fixedAddresses:
                    - null
                    - null
                    subnetId: null
                    addressRange:
                      maxAddress: null
                      minAddress: null
                    type: IPV4
                    numDynamicAddresses: 6
                  - fixedAddresses:
                    - null
                    - null
                    subnetId: null
                    addressRange:
                      maxAddress: null
                      minAddress: null
                    type: IPV4
                    numDynamicAddresses: 6
                  segmentationId: segmentationId
                layerProtocol: IP_OVER_ETHERNET
              - ipOverEthernet:
                  macAddress: null
                  ipAddresses:
                  - fixedAddresses:
                    - null
                    - null
                    subnetId: null
                    addressRange:
                      maxAddress: null
                      minAddress: null
                    type: IPV4
                    numDynamicAddresses: 6
                  - fixedAddresses:
                    - null
                    - null
                    subnetId: null
                    addressRange:
                      maxAddress: null
                      minAddress: null
                    type: IPV4
                    numDynamicAddresses: 6
                  segmentationId: segmentationId
                layerProtocol: IP_OVER_ETHERNET
              parentCpConfigId: null
    ExtLinkPortInfo:
      required:
      - id
      - resourceHandle
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        resourceHandle:
          $ref: '#/components/schemas/ResourceHandle'
        cpInstanceId:
          $ref: '#/components/schemas/IdentifierInVnf'
      description: "This type represents information about a link port of an external\
        \ VL, i.e. a port providing connectivity for the VNF to an NS VL.\n"
      example:
        resourceHandle: null
        id: null
        cpInstanceId: null
    MonitoringParameter:
      required:
      - id
      - performanceMetric
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        name:
          type: string
          description: "Human readable name of the monitoring parameter, as defined\
            \ in the VNFD.\n"
        performanceMetric:
          type: string
          description: |
            Performance metric that is monitored. This attribute shall contain the related "Measurement Name" value as defined in clause 7.2 of ETSI GS NFV-IFA 027.
      example:
        vnfdId: null
        name: name
        id: null
        performanceMetric: performanceMetric
    Link:
      required:
      - href
      type: object
      properties:
        href:
          $ref: '#/components/schemas/Uri'
      description: |
        This type represents a link to a resource using an absolute URI.
      example:
        href: href
    Uri:
      type: string
      description: |
        String formatted according to IETF RFC 3986.
    IdentifierInVnf:
      type: string
      description: "An identifier that is unique for the respective type within a\
        \ VNF instance, but may not be globally unique.\n"
    ResourceHandle:
      required:
      - resourceId
      type: object
      properties:
        vimConnectionId:
          $ref: '#/components/schemas/Identifier'
        resourceProviderId:
          $ref: '#/components/schemas/Identifier'
        resourceId:
          $ref: '#/components/schemas/IdentifierInVim'
        vimLevelResourceType:
          type: string
          description: |
            The value set of the "vimLevelResourceType" attribute is within the scope of the VIM or the resource provider and can be used as information that complements the ResourceHandle. This value set is different from the value set of the "type" attribute in the ResourceDefinition (refer to clause 9.5.3.2 in SOL003).
      description: |
        This type represents the information that allows addressing a virtualised resource that is used by a VNF instance. Information about the resource is available from the VIM.
      example:
        resourceId: null
        vimConnectionId: null
        vimLevelResourceType: vimLevelResourceType
        resourceProviderId: null
    IdentifierInVim:
      type: string
      description: |
        An identifier maintained by the VIM or other resource provider. It is expected to be unique within the VIM instance.
    VnfLinkPortInfo:
      required:
      - id
      - resourceHandle
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        resourceHandle:
          $ref: '#/components/schemas/ResourceHandle'
        cpInstanceId:
          $ref: '#/components/schemas/IdentifierInVnf'
        cpInstanceType:
          type: string
          description: "Type of the CP instance that is identified by cpInstanceId.\
            \ Shall be present if \"cpInstanceId\" is present, and shall be absent\
            \ otherwise. Permitted values: VNFC_CP: The link port is connected to\
            \ a VNFC CP EXT_CP: The link port is associated to an external CP.\n"
          enum:
          - VNFC_CP
          - EXT_CP
      example:
        resourceHandle: null
        cpInstanceType: VNFC_CP
        id: null
        cpInstanceId: null
    DateTime:
      type: string
      description: "Date-time stamp. Representation: String formatted according to\
        \ IETF RFC 3339.\n"
      format: date-time
    LcmOperationType:
      type: string
      description: |
        Value | Description ------|------------ INSTANTIATE | Represents the "Instantiate VNF" LCM operation.    SCALE | Represents the "Scale VNF" LCM operation. SCALE_TO_LEVEL | Represents the "Scale VNF to Level" LCM operation. CHANGE_FLAVOUR | Represents the "Change VNF Flavour" LCM operation. TERMINATE | Represents the "Terminate VNF" LCM operation. HEAL | Represents the "Heal VNF" LCM operation. OPERATE | Represents the "Operate VNF" LCM operation. CHANGE_EXT_CONN | Represents the "Change external VNF connectivity" LCM operation. MODIFY_INFO | Represents the "Modify VNF Information" LCM operation. CREATE_SNAPSHOT | Represents the "Create VNF Snapshot" LCM operation. REVERT_TO_SNAPSHOT | Represents the “Revert-To VNF Snapshot" LCM operation. CHANGE_VNFPKG | Represents the "Change current VNF package" LCM operation.
      enum:
      - INSTANTIATE
      - SCALE
      - SCALE_TO_LEVEL
      - CHANGE_FLAVOUR
      - TERMINATE
      - HEAL
      - OPERATE
      - CHANGE_EXT_CONN
      - MODIFY_INFO
      - CREATE_SNAPSHOT
      - REVERT_TO_SNAPSHOT
      - CHANGE_VNFPKG
    Boolean:
      type: boolean
      description: |
        The Boolean is a data type having two values (true and false).
    CancelModeType:
      type: string
      description: "Cancellation mode. GRACEFUL: If the VNF LCM operation occurrence\
        \ is in \"PROCESSING\" or \"ROLLING_BACK\" state, the VNFM shall not start\
        \ any new resource management operation and shall wait for the ongoing resource\
        \ management operations in the underlying system, typically the VIM, to finish\
        \ execution or to time out. After that, the VNFM shall put the operation occurrence\
        \ into the FAILED_TEMP state. If the VNF LCM operation occurrence is in \"\
        STARTING\" state, the VNFM shall not start any resource management operation\
        \ and shall wait for the granting request to finish execution or time out.\
        \ After that, the VNFM shall put the operation occurrence into the ROLLED_BACK\
        \ state. FORCEFUL: If the VNF LCM operation occurrence is in \"PROCESSING\"\
        \ or \"ROLLING_BACK\" state, the VNFM shall not start any new resource management\
        \ operation, shall cancel the ongoing resource management operations in the\
        \ underlying system, typically the VIM, and shall wait for the cancellation\
        \ to finish or to time out. After that, the VNFM shall put the operation occurrence\
        \ into the FAILED_TEMP state. If the VNF LCM operation occurrence is in \"\
        STARTING\" state, the VNFM shall not start any resource management operation\
        \ and put the operation occurrence into the ROLLED_BACK state.\n"
      enum:
      - GRACEFUL
      - FORCEFUL
    ModificationsTriggeredByVnfPkgChange:
      type: object
      properties:
        vnfConfigurableProperties:
          $ref: '#/components/schemas/KeyValuePairs'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
        extensions:
          $ref: '#/components/schemas/KeyValuePairs'
        vnfdId:
          $ref: '#/components/schemas/Identifier'
        vnfProvider:
          type: string
          description: "If present, this attribute signals the new value of the \"\
            vnfProvider\" attribute in \"VnfInstance\". If present, this attribute\
            \ (which depends on the value of the \"vnfdId\" attribute) was modified\
            \ implicitly during the related operation, and contains a copy of  the\
            \ value of he related attribute from the VNFD in the VNF Package identified\
            \ by the \"vnfdId\" attribute.\n"
        vnfProductName:
          type: string
          description: "If present, this attribute signals the new value of the \"\
            vnfProductName\" attribute in \"VnfInstance\". If present, this attribute\
            \ (which depends on the value of the \"vnfdId\" attribute) was modified\
            \ implicitly during the related operation, and contains a copy of  the\
            \ value of he related attribute from the VNFD in the VNF Package identified\
            \ by the \"vnfdId\" attribute.\n"
        vnfSoftwareVersion:
          $ref: '#/components/schemas/Version'
        vnfdVersion:
          $ref: '#/components/schemas/Version'
      description: "This type represents attribute modifications that were performed\
        \ on an \"Individual VNF instance\" resource when changing the current VNF\
        \ package. The attributes that can be included consist of those requested\
        \ to be modified explicitly in the \"ChangeCurrentVnfPkgRequest\" data structure,\
        \ and additional attributes of the \"VnfInstance\" data structure that were\
        \ modified implicitly during the operation.\n"
      example:
        vnfProductName: vnfProductName
        metadata: null
        extensions: null
        vnfdVersion: null
        vnfProvider: vnfProvider
        vnfConfigurableProperties: null
        vnfdId: null
        vnfSoftwareVersion: null
    IdentifierLocal:
      type: string
      description: "An identifier that is unique within a limited local scope other\
        \ than above listed identifiers, such as within a complex data structure or\
        \ within a request-response pair. Representation: string of variable length.\n"
    String:
      type: string
      description: |
        A string defined in IETF RFC 8259.
    VnfInstanceSubscriptionFilter:
      type: object
      properties:
        vnfdIds:
          type: array
          description: "If present, match VNF instances that were created based on\
            \ a VNFD identified by one of the vnfdId values listed in this attribute.\
            \ The attributes \"vnfdIds\" and \"vnfProductsFromProviders\" are alternatives\
            \ to reference to VNF instances that are based on certain VNFDs in a filter.\
            \ They should not be used both in the same filter instance, but one alternative\
            \ should be chosen.\n"
          items:
            $ref: '#/components/schemas/Identifier'
        vnfProductsFromProviders:
          type: array
          description: "If present, match VNF instances that belong to VNF products\
            \ from certain providers. The attributes \"vnfdIds\" and \"vnfProductsFromProviders\"\
            \ are alternatives to reference to VNF instances that are based on certain\
            \ VNFDs in a filter. They should not be used both in the same filter instance,\
            \ but one alternative should be chosen.\n"
          items:
            $ref: '#/components/schemas/VnfInstanceSubscriptionFilter_vnfProductsFromProviders'
        vnfInstanceIds:
          type: array
          description: "If present, match VNF instances with an instance identifier\
            \ listed in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\"\
            \ are alternatives to reference to particular VNF Instances in a filter.\
            \ They should not be used both in the same filter instance, but one alternative\
            \ should be chosen.\n"
          items:
            $ref: '#/components/schemas/Identifier'
        vnfInstanceNames:
          type: array
          description: "If present, match VNF instances with a VNF Instance Name listed\
            \ in this attribute. The attributes \"vnfInstanceIds\" and \"vnfInstanceNames\"\
            \ are alternatives to reference to particular VNF Instances in a filter.\
            \ They should not be used both in the same filter instance, but one alternative\
            \ should be chosen.\n"
          items:
            type: string
      description: |
        This type represents subscription filter criteria to match VNF instances.
      example:
        vnfdIds:
        - null
        - null
        vnfProductsFromProviders:
        - vnfProducts:
          - vnfProductName: vnfProductName
            versions:
            - vnfSoftwareVersion: vnfSoftwareVersion
              vnfdVersions:
              - null
              - null
            - vnfSoftwareVersion: vnfSoftwareVersion
              vnfdVersions:
              - null
              - null
          - vnfProductName: vnfProductName
            versions:
            - vnfSoftwareVersion: vnfSoftwareVersion
              vnfdVersions:
              - null
              - null
            - vnfSoftwareVersion: vnfSoftwareVersion
              vnfdVersions:
              - null
              - null
          vnfProvider: vnfProvider
        - vnfProducts:
          - vnfProductName: vnfProductName
            versions:
            - vnfSoftwareVersion: vnfSoftwareVersion
              vnfdVersions:
              - null
              - null
            - vnfSoftwareVersion: vnfSoftwareVersion
              vnfdVersions:
              - null
              - null
          - vnfProductName: vnfProductName
            versions:
            - vnfSoftwareVersion: vnfSoftwareVersion
              vnfdVersions:
              - null
              - null
            - vnfSoftwareVersion: vnfSoftwareVersion
              vnfdVersions:
              - null
              - null
          vnfProvider: vnfProvider
        vnfInstanceNames:
        - vnfInstanceNames
        - vnfInstanceNames
        vnfInstanceIds:
        - null
        - null
      anyOf:
      - oneOf:
        - required:
          - vnfdId
        - required:
          - vnfProductsFromProviders
      - oneOf:
        - required:
          - vnfInstanceIds
        - required:
          - vnfInstanceNames
    ExtVirtualLinkData:
      required:
      - extCps
      - id
      - resourceId
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        vimConnectionId:
          $ref: '#/components/schemas/Identifier'
        resourceProviderId:
          $ref: '#/components/schemas/Identifier'
        resourceId:
          $ref: '#/components/schemas/IdentifierInVim'
        extCps:
          type: array
          description: |
            External CPs of the VNF to be connected to this external VL.
          items:
            $ref: '#/components/schemas/VnfExtCpData'
        extLinkPorts:
          type: array
          description: "Externally provided link ports to be used to connect external\
            \ connection points to this external VL. If this attribute is not present,\
            \ the VNFM shall create the link ports on the external VL.\n"
          items:
            $ref: '#/components/schemas/ExtLinkPortData'
      description: |
        This type represents an external VL.
    VnfExtCpData:
      required:
      - cpdId
      type: object
      properties:
        cpdId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        cpConfig:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/VnfExtCpConfig'
          description: "Map of instance data that need to be configured on the CP\
            \ instances created from the respective CPD. The key of the map which\
            \ identifies the individual VnfExtCpConfig entries is managed by the API\
            \ consumer. The entries shall be applied by the VNFM according to the\
            \ rules of JSON Merge Patch (see IETF RFC 7396). Within one VNF instance,\
            \ all VNFC instances created from a particular VDU have the same external\
            \ connectivity. Thus, given a particular value of the “cpdId” attribute,\
            \ there shall be one “cpConfig” entry for each VNFC instance that has\
            \ been or can be created from a VDU which includes a CPD identified by\
            \ the “cpdId” attribute. If the cpConfig represents a subport in a trunk,\
            \ all “cpConfig” entries in this list shall have the same segmentationId,\
            \ which means they are connected to the same set of external VLs via the\
            \ trunk. The map entry value shall be set to \"null\" in order to delete\
            \ a \"VnfExtCpConfig\" entry identified by a particular key value from\
            \ the map, i.e. for the disconnection of an existing external CP instance\
            \ addressed by cpInstanceId in the deleted map entry from a particular\
            \ external virtual link, and deletion of that instance in case it represents\
            \ a subport. Deleting the last key from the map removes the affected instance\
            \ of the \"VnfExtCpData\" structure from its parent data structure.\n"
      description: |
        This type represents configuration information for external CPs created from a CPD.
      example:
        cpdId: null
        cpConfig:
          key:
            linkPortId: null
            cpProtocolData:
            - ipOverEthernet:
                macAddress: null
                ipAddresses:
                - fixedAddresses:
                  - null
                  - null
                  subnetId: null
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                  numDynamicAddresses: 6
                - fixedAddresses:
                  - null
                  - null
                  subnetId: null
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                  numDynamicAddresses: 6
                segmentationId: segmentationId
              layerProtocol: IP_OVER_ETHERNET
            - ipOverEthernet:
                macAddress: null
                ipAddresses:
                - fixedAddresses:
                  - null
                  - null
                  subnetId: null
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                  numDynamicAddresses: 6
                - fixedAddresses:
                  - null
                  - null
                  subnetId: null
                  addressRange:
                    maxAddress: null
                    minAddress: null
                  type: IPV4
                  numDynamicAddresses: 6
                segmentationId: segmentationId
              layerProtocol: IP_OVER_ETHERNET
            parentCpConfigId: null
    VnfExtCpConfig:
      type: object
      properties:
        parentCpConfigId:
          $ref: '#/components/schemas/IdentifierInVnf'
        linkPortId:
          $ref: '#/components/schemas/Identifier'
        cpProtocolData:
          type: array
          description: "Parameters for configuring the network protocols on the link\
            \ port that connects the CP to a VL. The following conditions apply to\
            \ the attributes \"linkPortId\" and \"cpProtocolData\": 1) Void 2) At\
            \ least one of the \"linkPortId\" and \"cpProtocolData\" attributes \n\
            \   shall be present for an external CP instance representing a subport\
            \ \n   that is to be created, or an external CP instance that is to be\
            \ created \n   by creating the corresponding VNFC or VNF instance during\
            \ the current or \n   a subsequent LCM operation, or for an existing external\
            \ CP instance \n   that is to be re-configured or added to a particular\
            \ external virtual link.\n3) If the \"linkPortId\" attribute is absent,\
            \ the VNFM shall create a\n   link port.\n4) If the \"cpProtocolData\"\
            \ attribute is absent, the \"linkPortId\"\n   attribute shall be provided\
            \ referencing a pre-created link port,\n   and the VNFM can use means\
            \ outside the scope of the present\n   document to obtain the pre-configured\
            \ address information for the\n   connection point from the resource representing\
            \ the link port.\n5) If both \"cpProtocolData\" and \"linkportId\" are\
            \ provided, the API\n   consumer shall ensure that the cpProtocolData\
            \ can be used with the\n   pre-created link port referenced by \"linkPortId\"\
            .\n"
          items:
            $ref: '#/components/schemas/CpProtocolData'
      description: "This type represents an externally provided link port or network\
        \ address information per instance of an external connection point. In case\
        \ a link port is provided, the VNFM shall use that link port when connecting\
        \ the external CP to the external VL. In a link port is not provided, the\
        \ VNFM shall create a link port on the external VL, and use that link port\
        \ to connect the external CP to the external VL.\n"
      example:
        linkPortId: null
        cpProtocolData:
        - ipOverEthernet:
            macAddress: null
            ipAddresses:
            - fixedAddresses:
              - null
              - null
              subnetId: null
              addressRange:
                maxAddress: null
                minAddress: null
              type: IPV4
              numDynamicAddresses: 6
            - fixedAddresses:
              - null
              - null
              subnetId: null
              addressRange:
                maxAddress: null
                minAddress: null
              type: IPV4
              numDynamicAddresses: 6
            segmentationId: segmentationId
          layerProtocol: IP_OVER_ETHERNET
        - ipOverEthernet:
            macAddress: null
            ipAddresses:
            - fixedAddresses:
              - null
              - null
              subnetId: null
              addressRange:
                maxAddress: null
                minAddress: null
              type: IPV4
              numDynamicAddresses: 6
            - fixedAddresses:
              - null
              - null
              subnetId: null
              addressRange:
                maxAddress: null
                minAddress: null
              type: IPV4
              numDynamicAddresses: 6
            segmentationId: segmentationId
          layerProtocol: IP_OVER_ETHERNET
        parentCpConfigId: null
      anyOf:
      - required:
        - linkPortId
      - required:
        - cpProtocolData
    CpProtocolData:
      required:
      - layerProtocol
      type: object
      properties:
        layerProtocol:
          type: string
          description: "Identifier of layer(s) and protocol(s). This attribute allows\
            \ to signal the addition of further types of layer and protocol in future\
            \ versions of the present document in a backwards-compatible way. In the\
            \ current version of the present document, only IP over Ethernet is supported.\n"
          enum:
          - IP_OVER_ETHERNET
        ipOverEthernet:
          $ref: '#/components/schemas/IpOverEthernetAddressData'
      description: |
        This type represents network protocol data.
      example:
        ipOverEthernet:
          macAddress: null
          ipAddresses:
          - fixedAddresses:
            - null
            - null
            subnetId: null
            addressRange:
              maxAddress: null
              minAddress: null
            type: IPV4
            numDynamicAddresses: 6
          - fixedAddresses:
            - null
            - null
            subnetId: null
            addressRange:
              maxAddress: null
              minAddress: null
            type: IPV4
            numDynamicAddresses: 6
          segmentationId: segmentationId
        layerProtocol: IP_OVER_ETHERNET
    IpOverEthernetAddressData:
      type: object
      properties:
        macAddress:
          $ref: '#/components/schemas/MacAddress'
        segmentationId:
          type: string
          description: "Identification of the network segment to which the Cp instance\
            \ connects to. If the Cp instance represents a subport in a trunk, segmentationId\
            \ shall be present. Otherwise it shall not be present. Depending on the\
            \ NFVI networking infrastructure, the segmentationId may indicate the\
            \ actual network segment value (e.g. vlan Id, Vxlan segmentation id, etc.)\
            \ used in the transport header of the packets or it may be an identifier\
            \ used between the application and the NFVI networking infrastructure\
            \ to identify the network sub-interface of the trunk port in question.\
            \ In the latter case the NFVI infrastructure will map this local segmentationId\
            \ to whatever segmentationId is actually used by the NFVI’s transport\
            \ technology.\n"
        ipAddresses:
          type: array
          description: "List of IP addresses to assign to the CP instance. Each entry\
            \ represents IP address data for fixed or dynamic IP address assignment\
            \ per subnet. If this attribute is not present, no IP address shall be\
            \ assigned.\n"
          items:
            $ref: '#/components/schemas/IpOverEthernetAddressData_ipAddresses'
      description: |
        This type represents network address data for IP over Ethernet.
      example:
        macAddress: null
        ipAddresses:
        - fixedAddresses:
          - null
          - null
          subnetId: null
          addressRange:
            maxAddress: null
            minAddress: null
          type: IPV4
          numDynamicAddresses: 6
        - fixedAddresses:
          - null
          - null
          subnetId: null
          addressRange:
            maxAddress: null
            minAddress: null
          type: IPV4
          numDynamicAddresses: 6
        segmentationId: segmentationId
      anyOf:
      - required:
        - macAddress
      - required:
        - ipAddresses
      oneOf:
      - required:
        - fixedAddresses
      - required:
        - numDynamicAddresses
      - required:
        - ipAddressRange
    MacAddress:
      type: string
      description: "A MAC address. Representation: string that consists of groups\
        \ of two hexadecimal digits, separated by hyphens or colons.\n"
      format: MAC
    IpAddress:
      type: string
      description: "An IPV4 or IPV6 address. Representation: In case of an IPV4 address,\
        \ string that consists of four decimal integers separated by dots, each integer\
        \ ranging from 0 to 255. In case of an IPV6 address, string that consists\
        \ of groups of zero to four hexadecimal digits, separated by colons.\n"
      format: IP
    ExtLinkPortData:
      required:
      - id
      - resourceHandle
      type: object
      properties:
        id:
          $ref: '#/components/schemas/Identifier'
        resourceHandle:
          $ref: '#/components/schemas/ResourceHandle'
      description: |
        This type represents an externally provided link port to be used to connect an external connection point to an external VL.
    VnfLinkPortData:
      required:
      - resourceHandle
      - vnfLinkPortId
      type: object
      properties:
        vnfLinkPortId:
          $ref: '#/components/schemas/Identifier'
        resourceHandle:
          $ref: '#/components/schemas/ResourceHandle'
      description: |
        This type represents an externally provided link port to be used to connect a VNFC connection point  to an exernally managed VL.
    SubscriptionAuthentication:
      required:
      - authType
      type: object
      properties:
        authType:
          type: array
          description: "Defines the types of Authentication / Authorization which\
            \ the API consumer is willing to accept when receiving a notification.\
            \ Permitted values: * BASIC: In every HTTP request to the notification\
            \ endpoint, use\n  HTTP Basic authentication with the client credentials.\
            \ \n* OAUTH2_CLIENT_CREDENTIALS: In every HTTP request to the\n  notification\
            \ endpoint, use an OAuth 2.0 Bearer token, obtained\n  using the client\
            \ credentials grant type.\n* TLS_CERT: Every HTTP request to the notification\
            \ endpoint is sent\n  over a mutually authenticated TLS session, i.e.\
            \ not only the\n  server is authenticated, but also the client is authenticated\n\
            \  during the TLS tunnel setup.\n"
          items:
            type: string
            enum:
            - BASIC
            - OAUTH2_CLIENT_CREDENTIALS
            - TLS_CERT
        paramsBasic:
          $ref: '#/components/schemas/SubscriptionAuthentication_paramsBasic'
        paramsOauth2ClientCredentials:
          $ref: '#/components/schemas/SubscriptionAuthentication_paramsOauth2ClientCredentials'
    VnfInstance_instantiatedVnfInfo:
      required:
      - flavourId
      - vnfState
      type: object
      properties:
        flavourId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfState:
          $ref: '#/components/schemas/VnfOperationalStateType'
        scaleStatus:
          type: array
          description: "Scale status of the VNF, one entry per aspect. Represents\
            \ for every scaling aspect how \"big\" the VNF has been scaled w.r.t.\
            \ that aspect. This attribute shall be present if the VNF supports scaling.\
            \ See clause B.2 for an explanation of VNF scaling.\n"
          items:
            $ref: '#/components/schemas/ScaleInfo'
        maxScaleLevels:
          type: array
          description: "Maximum allowed scale levels of the VNF, one entry per aspect.\
            \ This attribute shall be present if the VNF supports scaling.\n"
          items:
            $ref: '#/components/schemas/ScaleInfo'
        extCpInfo:
          minItems: 1
          type: array
          description: "Information about the external CPs exposed by the VNF instance.\
            \ When trunking is enabled, the list of entries includes both, external\
            \ CPs corresponding to parent ports of a trunk, and external CPs associated\
            \ to sub-ports of a trunk.\n"
          items:
            $ref: '#/components/schemas/VnfExtCpInfo'
        extVirtualLinkInfo:
          type: array
          description: |
            Information about the external VLs the VNF instance is connected to.
          items:
            $ref: '#/components/schemas/ExtVirtualLinkInfo'
        extManagedVirtualLinkInfo:
          type: array
          description: "Information about the externally-managed internal VLs of the\
            \ VNF instance.\nNOTE: It is possible to have several ExtManagedVirtualLinkInfo\
            \ for the same VNF internal VL in case of a multi-site VNF spanning several\
            \ VIMs. The set of ExtManagedVirtualLinkInfo corresponding to the same\
            \ VNF internal VL shall indicate so by referencing to the same VnfVirtualLinkDesc\
            \ and externally-managed multi-site VL instance (refer to clause 5.5.3.3).\n"
          items:
            $ref: '#/components/schemas/ExtManagedVirtualLinkInfo'
        monitoringParameters:
          type: array
          description: |
            Active monitoring parameters.
          items:
            $ref: '#/components/schemas/MonitoringParameter'
        localizationLanguage:
          type: string
          description: "Information about localization language of the VNF (includes\
            \ e.g. strings in the VNFD). The localization languages supported by a\
            \ VNF can be declared in the VNFD, and localization language selection\
            \ can take place at instantiation time. The value shall comply with the\
            \ format defined in IETF RFC 5646.\n"
        vnfcResourceInfo:
          type: array
          description: |
            Information about the virtualised compute and storage resources used by the VNFCs of the VNF instance.
          items:
            $ref: '#/components/schemas/VnfcResourceInfo'
        virtualLinkResourceInfo:
          type: array
          description: |
            Information about the virtualised network resources used by the VLs of the VNF instance.
          items:
            $ref: '#/components/schemas/VnfVirtualLinkResourceInfo'
        virtualStorageResourceInfo:
          type: array
          description: |
            Information on the virtualised storage resource(s) used as storage for the VNF instance.
          items:
            $ref: '#/components/schemas/VirtualStorageResourceInfo'
      description: |
        Information specific to an instantiated VNF instance. This attribute shall be present if the instantiateState attribute value is INSTANTIATED.
      example:
        virtualLinkResourceInfo:
        - metadata: null
          reservationId: null
          networkResource: null
          vnfdId: null
          zoneId: null
          id: null
          vnfVirtualLinkDescId: null
          vnfLinkPorts:
          - null
          - null
        - metadata: null
          reservationId: null
          networkResource: null
          vnfdId: null
          zoneId: null
          id: null
          vnfVirtualLinkDescId: null
          vnfLinkPorts:
          - null
          - null
        monitoringParameters:
        - vnfdId: null
          name: name
          id: null
          performanceMetric: performanceMetric
        - vnfdId: null
          name: name
          id: null
          performanceMetric: performanceMetric
        flavourId: flavourId
        scaleStatus:
        - scaleLevel: 0
          aspectId: null
          vnfdId: null
        - scaleLevel: 0
          aspectId: null
          vnfdId: null
        extVirtualLinkInfo:
        - resourceHandle:
            resourceId: null
            vimConnectionId: null
            vimLevelResourceType: vimLevelResourceType
            resourceProviderId: null
          extLinkPorts:
          - resourceHandle: null
            id: null
            cpInstanceId: null
          - resourceHandle: null
            id: null
            cpInstanceId: null
          id: null
          currentVnfExtCpData:
          - cpdId: null
            cpConfig:
              key:
                linkPortId: null
                cpProtocolData:
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                parentCpConfigId: null
          - cpdId: null
            cpConfig:
              key:
                linkPortId: null
                cpProtocolData:
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                parentCpConfigId: null
        - resourceHandle:
            resourceId: null
            vimConnectionId: null
            vimLevelResourceType: vimLevelResourceType
            resourceProviderId: null
          extLinkPorts:
          - resourceHandle: null
            id: null
            cpInstanceId: null
          - resourceHandle: null
            id: null
            cpInstanceId: null
          id: null
          currentVnfExtCpData:
          - cpdId: null
            cpConfig:
              key:
                linkPortId: null
                cpProtocolData:
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                parentCpConfigId: null
          - cpdId: null
            cpConfig:
              key:
                linkPortId: null
                cpProtocolData:
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                - ipOverEthernet:
                    macAddress: null
                    ipAddresses:
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    - fixedAddresses:
                      - null
                      - null
                      subnetId: null
                      addressRange:
                        maxAddress: null
                        minAddress: null
                      type: IPV4
                      numDynamicAddresses: 6
                    segmentationId: segmentationId
                  layerProtocol: IP_OVER_ETHERNET
                parentCpConfigId: null
        localizationLanguage: localizationLanguage
        extManagedVirtualLinkInfo:
        - networkResource: null
          vnfdId: null
          id: null
          vnfVirtualLinkDescId: null
          extManagedMultisiteVirtualLinkId: null
          vnfLinkPorts:
          - resourceHandle: null
            cpInstanceType: VNFC_CP
            id: null
            cpInstanceId: null
          - resourceHandle: null
            cpInstanceType: VNFC_CP
            id: null
            cpInstanceId: null
        - networkResource: null
          vnfdId: null
          id: null
          vnfVirtualLinkDescId: null
          extManagedMultisiteVirtualLinkId: null
          vnfLinkPorts:
          - resourceHandle: null
            cpInstanceType: VNFC_CP
            id: null
            cpInstanceId: null
          - resourceHandle: null
            cpInstanceType: VNFC_CP
            id: null
            cpInstanceId: null
        maxScaleLevels:
        - null
        - null
        vnfcResourceInfo:
        - metadata: null
          storageResourceIds:
          - null
          - null
          reservationId: null
          vnfcCpInfo:
          - metadata: null
            cpProtocolInfo:
            - null
            - null
            cpdId: null
            id: null
            vnfExtCpId: null
            vnfLinkPortId: null
          - metadata: null
            cpProtocolInfo:
            - null
            - null
            cpdId: null
            id: null
            vnfExtCpId: null
            vnfLinkPortId: null
          vnfdId: null
          zoneId: null
          id: null
          vduId: null
          computeResource: null
        - metadata: null
          storageResourceIds:
          - null
          - null
          reservationId: null
          vnfcCpInfo:
          - metadata: null
            cpProtocolInfo:
            - null
            - null
            cpdId: null
            id: null
            vnfExtCpId: null
            vnfLinkPortId: null
          - metadata: null
            cpProtocolInfo:
            - null
            - null
            cpdId: null
            id: null
            vnfExtCpId: null
            vnfLinkPortId: null
          vnfdId: null
          zoneId: null
          id: null
          vduId: null
          computeResource: null
        vnfState: STARTED
        extCpInfo:
        - metadata: null
          cpProtocolInfo:
          - ipOverEthernet:
              macAddress: macAddress
              ipAddresses:
              - subnetId: subnetId
                addresses:
                - addresses
                - addresses
                isDynamic: true
                addressRange:
                  maxAddress: null
                  minAddress: null
                type: IPV4
              - subnetId: subnetId
                addresses:
                - addresses
                - addresses
                isDynamic: true
                addressRange:
                  maxAddress: null
                  minAddress: null
                type: IPV4
              segmentationId: segmentationId
            layerProtocol: IP_OVER_ETHERNET
          - ipOverEthernet:
              macAddress: macAddress
              ipAddresses:
              - subnetId: subnetId
                addresses:
                - addresses
                - addresses
                isDynamic: true
                addressRange:
                  maxAddress: null
                  minAddress: null
                type: IPV4
              - subnetId: subnetId
                addresses:
                - addresses
                - addresses
                isDynamic: true
                addressRange:
                  maxAddress: null
                  minAddress: null
                type: IPV4
              segmentationId: segmentationId
            layerProtocol: IP_OVER_ETHERNET
          cpdId: null
          associatedVnfVirtualLinkId: null
          cpConfigId: null
          vnfdId: null
          associatedVnfcCpId: null
          id: id
          extLinkPortId: null
        - metadata: null
          cpProtocolInfo:
          - ipOverEthernet:
              macAddress: macAddress
              ipAddresses:
              - subnetId: subnetId
                addresses:
                - addresses
                - addresses
                isDynamic: true
                addressRange:
                  maxAddress: null
                  minAddress: null
                type: IPV4
              - subnetId: subnetId
                addresses:
                - addresses
                - addresses
                isDynamic: true
                addressRange:
                  maxAddress: null
                  minAddress: null
                type: IPV4
              segmentationId: segmentationId
            layerProtocol: IP_OVER_ETHERNET
          - ipOverEthernet:
              macAddress: macAddress
              ipAddresses:
              - subnetId: subnetId
                addresses:
                - addresses
                - addresses
                isDynamic: true
                addressRange:
                  maxAddress: null
                  minAddress: null
                type: IPV4
              - subnetId: subnetId
                addresses:
                - addresses
                - addresses
                isDynamic: true
                addressRange:
                  maxAddress: null
                  minAddress: null
                type: IPV4
              segmentationId: segmentationId
            layerProtocol: IP_OVER_ETHERNET
          cpdId: null
          associatedVnfVirtualLinkId: null
          cpConfigId: null
          vnfdId: null
          associatedVnfcCpId: null
          id: id
          extLinkPortId: null
        virtualStorageResourceInfo:
        - metadata: null
          reservationId: null
          virtualStorageDescId: null
          vnfdId: null
          zoneId: null
          id: null
          storageResource: null
        - metadata: null
          reservationId: null
          virtualStorageDescId: null
          vnfdId: null
          zoneId: null
          id: null
          storageResource: null
    VnfInstance__links:
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        indicators:
          $ref: '#/components/schemas/Link'
        instantiate:
          $ref: '#/components/schemas/Link'
        terminate:
          $ref: '#/components/schemas/Link'
        scale:
          $ref: '#/components/schemas/Link'
        scaleToLevel:
          $ref: '#/components/schemas/Link'
        changeFlavour:
          $ref: '#/components/schemas/Link'
        heal:
          $ref: '#/components/schemas/Link'
        operate:
          $ref: '#/components/schemas/Link'
        changeExtConn:
          $ref: '#/components/schemas/Link'
        createSnapshot:
          $ref: '#/components/schemas/Link'
        revertToSnapshot:
          $ref: '#/components/schemas/Link'
      description: |
        Links to resources related to this resource.
      example:
        operate: null
        scaleToLevel: null
        heal: null
        createSnapshot: null
        self:
          href: href
        scale: null
        revertToSnapshot: null
        terminate: null
        changeFlavour: null
        indicators: null
        instantiate: null
        changeExtConn: null
    VnfcResourceInfo_vnfcCpInfo:
      required:
      - cpdId
      - id
      type: object
      properties:
        id:
          $ref: '#/components/schemas/IdentifierInVnf'
        cpdId:
          $ref: '#/components/schemas/IdentifierInVnfd'
        vnfExtCpId:
          $ref: '#/components/schemas/IdentifierInVnf'
        cpProtocolInfo:
          type: array
          description: |
            Network protocol information for this CP. May be omitted if the VNFC CP is exposed as an external CP. The information can be omitted because it is already available as part of the external CP information.
          items:
            $ref: '#/components/schemas/CpProtocolInfo'
        vnfLinkPortId:
          $ref: '#/components/schemas/IdentifierInVnf'
        metadata:
          $ref: '#/components/schemas/KeyValuePairs'
      example:
        metadata: null
        cpProtocolInfo:
        - null
        - null
        cpdId: null
        id: null
        vnfExtCpId: null
        vnfLinkPortId: null
    VnfLcmOpOcc_resourceChanges:
      type: object
      properties:
        affectedVnfcs:
          type: array
          description: |
            Information about VNFC instances that were affected during the lifecycle operation. This allows the API consumer to obtain the information contained in the latest "result" notification if it has not received it due to an error or a wrongly configured subscription filter.
          items:
            $ref: '#/components/schemas/AffectedVnfc'
        affectedVirtualLinks:
          type: array
          description: "Information about VL instances that were affected during the\
            \ lifecycle operation. This allows the API consumer to obtain the information\
            \ contained in the latest \"result\" notification if it has not received\
            \ it due to an error or a wrongly configured subscription filter. For\
            \ a particular affected VL, there shall be as many \"AffectedVirtualLink\"\
            \ entries as needed for signalling the different types of changes, i.e.,\
            \ one per virtual link and change type. For instance, in the case of signaling\
            \ affected VL instances involving the addition of a particular VL instance\
            \ with links ports, one \"AffectedVirtualLink\" entry signals the addition\
            \ of the VL by using the \"changeType\" attribute of \"AffectedVirtualLink\"\
            \ structure equal to \"ADDED\", and another \"AffectedVirtualLink\" entry\
            \ signals the addition of VNF link ports of the VL by using the \"changeType\"\
            \ equal to \"LINK_PORT_ADDED\".\n"
          items:
            $ref: '#/components/schemas/AffectedVirtualLink'
        affectedExtLinkPorts:
          type: array
          description: |
            Information about external VNF link ports that were affected during the lifecycle operation. This allows the API consumer to obtain the information contained in the latest "result" notification if it has not received it due to an error or a wrongly configured subscription filter.
          items:
            $ref: '#/components/schemas/AffectedExtLinkPort'
        affectedVirtualStorages:
          type: array
          description: |
            Information about virtualised storage instances that were affected during the lifecycle operation. This allows the API consumer to obtain the information contained in the latest "result" notification if it has not received it due to an error or a wrongly configured subscription filter.
          items:
            $ref: '#/components/schemas/AffectedVirtualStorage'
      description: "This attribute contains information about the cumulative changes\
        \ to virtualised resources that were performed so far by the LCM operation\
        \ since its start, if applicable.\n"
      example:
        affectedVirtualLinks:
        - resourceDefinitionId: null
          metadata: null
          networkResource: null
          changeType: ADDED
          vnfdId: null
          zoneId: null
          id: null
          vnfVirtualLinkDescId: null
          vnfLinkPortIds:
          - null
          - null
        - resourceDefinitionId: null
          metadata: null
          networkResource: null
          changeType: ADDED
          vnfdId: null
          zoneId: null
          id: null
          vnfVirtualLinkDescId: null
          vnfLinkPortIds:
          - null
          - null
        affectedVirtualStorages:
        - resourceDefinitionId: null
          metadata: null
          virtualStorageDescId: null
          changeType: ADDED
          vnfdId: null
          zoneId: null
          id: null
          storageResource: null
        - resourceDefinitionId: null
          metadata: null
          virtualStorageDescId: null
          changeType: ADDED
          vnfdId: null
          zoneId: null
          id: null
          storageResource: null
        affectedVnfcs:
        - resourceDefinitionId: resourceDefinitionId
          addedStorageResourceIds:
          - null
          - null
          metadata: {}
          changeType: ADDED
          vnfdId: null
          zoneId: null
          affectedVnfcCpIds:
          - null
          - null
          id: id
          vduId: vduId
          computeResource:
            resourceId: null
            vimConnectionId: null
            vimLevelResourceType: vimLevelResourceType
            resourceProviderId: null
          removedStorageResourceIds:
          - null
          - null
        - resourceDefinitionId: resourceDefinitionId
          addedStorageResourceIds:
          - null
          - null
          metadata: {}
          changeType: ADDED
          vnfdId: null
          zoneId: null
          affectedVnfcCpIds:
          - null
          - null
          id: id
          vduId: vduId
          computeResource:
            resourceId: null
            vimConnectionId: null
            vimLevelResourceType: vimLevelResourceType
            resourceProviderId: null
          removedStorageResourceIds:
          - null
          - null
        affectedExtLinkPorts:
        - resourceDefinitionId: null
          resourceHandle: null
          extCpInstanceId: null
          changeType: ADDED
          id: null
        - resourceDefinitionId: null
          resourceHandle: null
          extCpInstanceId: null
          changeType: ADDED
          id: null
    VnfLcmOpOcc__links:
      required:
      - self
      - vnfInstance
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        vnfInstance:
          $ref: '#/components/schemas/Link'
        grant:
          $ref: '#/components/schemas/Link'
        cancel:
          $ref: '#/components/schemas/Link'
        retry:
          $ref: '#/components/schemas/Link'
        rollback:
          $ref: '#/components/schemas/Link'
        fail:
          $ref: '#/components/schemas/Link'
        vnfSnapshot:
          $ref: '#/components/schemas/Link'
      description: |
        Links to resources related to this resource.
      example:
        cancel: null
        rollback: null
        vnfSnapshot: null
        fail: null
        self:
          href: href
        grant: null
        vnfInstance: null
        retry: null
    LccnSubscription__links:
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
      description: |
        Links to resources related to this resource.
      example:
        self:
          href: href
    VnfSnapshotInfo__links:
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        takenFrom:
          $ref: '#/components/schemas/Link'
      description: |
        Links to resources related to this resource.
    VnfSnapshot__links:
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/Link'
        vnfStateSnapshot:
          $ref: '#/components/schemas/Link'
      description: |
        Links to resources related to this resource.
    VnfcSnapshotInfo_storageSnapshotResources:
      required:
      - storageResourceId
      type: object
      properties:
        storageResourceId:
          $ref: '#/components/schemas/IdentifierInVnf'
        storageSnapshotResource:
          $ref: '#/components/schemas/KeyValuePairs'
    IpOverEthernetAddressInfo_addressRange:
      required:
      - maxAddress
      - minAddress
      type: object
      properties:
        minAddress:
          $ref: '#/components/schemas/IpAddress'
        maxAddress:
          $ref: '#/components/schemas/IpAddress'
      description: "An IP address range used, e.g., in case of egress connections.\
        \ Exactly one of \"addresses\" or \"addressRange\" shall be present.\n"
      example:
        maxAddress: null
        minAddress: null
    IpOverEthernetAddressInfo_ipAddresses:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: "The type of the IP addresses. Permitted values: IPV4, IPV6.\n"
          enum:
          - IPV4
          - IPV6
        addresses:
          type: array
          description: |
            Fixed addresses assigned (from the subnet defined by "subnetId" if provided). Exactly one of "addresses" or "addressRange" shall be present.
          items:
            $ref: '#/components/schemas/IpAddress'
        isDynamic:
          type: boolean
          description: |
            Indicates whether this set of addresses was assigned dynamically (true) or based on address information provided as input from the API consumer (false). Shall be present if "addresses" is present and shall be absent otherwise.
        addressRange:
          $ref: '#/components/schemas/IpOverEthernetAddressInfo_addressRange'
        subnetId:
          $ref: '#/components/schemas/IdentifierInVim'
      example:
        subnetId: subnetId
        addresses:
        - addresses
        - addresses
        isDynamic: true
        addressRange:
          maxAddress: null
          minAddress: null
        type: IPV4
    VnfInstanceSubscriptionFilter_versions:
      required:
      - vnfSoftwareVersion
      type: object
      properties:
        vnfSoftwareVersion:
          $ref: '#/components/schemas/Version'
        vnfdVersions:
          type: array
          description: "If present, match VNF instances that belong to VNF products\
            \ with certain VNFD versions, a certain software version and a certain\
            \ product name, from one particular provider.\n"
          items:
            $ref: '#/components/schemas/Version'
      example:
        vnfSoftwareVersion: vnfSoftwareVersion
        vnfdVersions:
        - null
        - null
    VnfInstanceSubscriptionFilter_vnfProducts:
      required:
      - vnfProductName
      type: object
      properties:
        vnfProductName:
          type: string
          description: |
            Name of the VNF product to match.
        versions:
          type: array
          description: "If present, match VNF instances that belong to VNF products\
            \ with certain versions and a certain product name, from one particular\
            \ provider.\n"
          items:
            $ref: '#/components/schemas/VnfInstanceSubscriptionFilter_versions'
      example:
        vnfProductName: vnfProductName
        versions:
        - vnfSoftwareVersion: vnfSoftwareVersion
          vnfdVersions:
          - null
          - null
        - vnfSoftwareVersion: vnfSoftwareVersion
          vnfdVersions:
          - null
          - null
    VnfInstanceSubscriptionFilter_vnfProductsFromProviders:
      required:
      - vnfProvider
      type: object
      properties:
        vnfProvider:
          type: string
          description: |
            Name of the VNF provider to match.
        vnfProducts:
          type: array
          description: "If present, match VNF instances that belong to VNF products\
            \ with certain product names, from one particular provider.\n"
          items:
            $ref: '#/components/schemas/VnfInstanceSubscriptionFilter_vnfProducts'
      example:
        vnfProducts:
        - vnfProductName: vnfProductName
          versions:
          - vnfSoftwareVersion: vnfSoftwareVersion
            vnfdVersions:
            - null
            - null
          - vnfSoftwareVersion: vnfSoftwareVersion
            vnfdVersions:
            - null
            - null
        - vnfProductName: vnfProductName
          versions:
          - vnfSoftwareVersion: vnfSoftwareVersion
            vnfdVersions:
            - null
            - null
          - vnfSoftwareVersion: vnfSoftwareVersion
            vnfdVersions:
            - null
            - null
        vnfProvider: vnfProvider
    IpOverEthernetAddressData_addressRange:
      required:
      - maxAddress
      - minAddress
      type: object
      properties:
        minAddress:
          $ref: '#/components/schemas/IpAddress'
        maxAddress:
          $ref: '#/components/schemas/IpAddress'
      description: "An IP address range to be used, e.g. in case of egress connections.\
        \ In case this attribute is present, IP addresses from the range will be used.\n"
      example:
        maxAddress: null
        minAddress: null
    IpOverEthernetAddressData_ipAddresses:
      required:
      - type
      type: object
      properties:
        type:
          type: string
          description: "The type of the IP addresses. Permitted values: IPV4, IPV6.\n"
          enum:
          - IPV4
          - IPV6
        fixedAddresses:
          type: array
          description: "Fixed addresses to assign (from the subnet defined by \"subnetId\"\
            \ if provided). Exactly one of \"fixedAddresses\", \"numDynamicAddresses\"\
            \ or \"ipAddressRange\" shall be present.\n"
          items:
            $ref: '#/components/schemas/IpAddress'
        numDynamicAddresses:
          type: integer
          description: "Number of dynamic addresses to assign (from the subnet defined\
            \ by \"subnetId\" if provided). Exactly one of \"fixedAddresses\", \"\
            numDynamicAddresses\" or \"ipAddressRange\" shall be present.\n"
        addressRange:
          $ref: '#/components/schemas/IpOverEthernetAddressData_addressRange'
        subnetId:
          $ref: '#/components/schemas/IdentifierInVim'
      example:
        fixedAddresses:
        - null
        - null
        subnetId: null
        addressRange:
          maxAddress: null
          minAddress: null
        type: IPV4
        numDynamicAddresses: 6
    SubscriptionAuthentication_paramsBasic:
      type: object
      properties:
        userName:
          type: string
          description: |
            Username to be used in HTTP Basic authentication. Shall be present if it has not been provisioned out of band.
        password:
          type: string
          description: |
            Password to be used in HTTP Basic authentication. Shall be present if it has not been provisioned out of band.
      description: |
        Parameters for authentication/authorization using BASIC. Shall be present if authType is "BASIC" and the contained information has not been provisioned out of band. Shall be absent otherwise.
    SubscriptionAuthentication_paramsOauth2ClientCredentials:
      type: object
      properties:
        clientId:
          type: string
          description: |
            Client identifier to be used in the access token request of the OAuth 2.0 client credentials grant type.  Shall be present if it has not been provisioned out of band. The clientId and clientPassword passed in a subscription shall not be the same as the clientId and clientPassword that are used to obtain authorization for API requests. Client credentials may differ between subscriptions. The value of clientPassword should be generated by a random process.
        clientPassword:
          type: string
          description: |
            Client password to be used in the access token request of the OAuth 2.0 client credentials grant type.  Shall be present if it has not been provisioned out of band. The clientId and clientPassword passed in a subscription shall not be the same as the clientId and clientPassword that are used to obtain authorization for API requests. Client credentials may differ between subscriptions. The value of clientPassword should be generated by a random process.
        tokenEndpoint:
          $ref: '#/components/schemas/Uri'
      description: |
        Parameters for authentication/authorization using OAUTH2_CLIENT_CREDENTIALS. Shall be present if authType is "OAUTH2_CLIENT_CREDENTIALS" and the contained information has not been provisioned out of band. Shall be absent otherwise.
  responses:
    VNFInstances.Post.201:
      description: "201 CREATED\n\nShall be returned when a new \"Individual VNF instance\"\
        \ resource and\nthe associated VNF instance identifier washas been created\
        \ successfully.\nThe response body shall contain a representation of the created\
        \ VNF instance,\nas defined in clause 5.5.2.2.\nThe HTTP response shall include\
        \ a \"Location\" HTTP header that contains the resource\nURI of the created\
        \ VNF instance.\n"
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfInstance'
    VNFInstances.Get.200:
      description: "200 OK\n\nShall be returned when information about zero or more\
        \ VNF instances has been queried successfully.\nThe response body shall contain\
        \ in an array the representations of zero or more VNF instances,\nas defined\
        \ in clause 5.5.2.2.\nIf the \"filter\" URI parameter or one of the \"all_fields\"\
        , \"fields\" (if supported), \"exclude_fields\"\n(if supported) or \"exclude_default\"\
        \ URI parameters was supplied in the request, the data in the response\nbody\
        \ shall have been transformed according to the rules specified in clauses\
        \ 5.2.2 and 5.3.2 of\nETSI GS NFV-SOL 013, respectively.\nIf the VNFM supports\
        \ alternative 2 (paging) according to clause 5.4.7.2.1 of ETSI GS NFV-SOL\
        \ 013\nfor this resource, inclusion of the Link HTTP header in this response\
        \ shall follow the provisions\nin clause 4.7.2.3.5.4.2.3 of ETSI GS NFV-SOL\
        \ 013.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
        Link:
          description: "Reference to other resources. Used for paging in the present\
            \ document, see clause 4.7.2.1.\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/VnfInstance'
            x-content-type: application/json
    IndividualVnfInstance.Get.200:
      description: "200 OK\n\nShall be returned when information about an individual\
        \ VNF instance has been read successfully.\nThe response body shall contain\
        \ a representation of the VNF instance, as defined in clause 5.5.2.2.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfInstance'
    IndividualVnfInstance.Patch.202:
      description: "202 ACCEPTED\n\nShall be returned when the request has been accepted\
        \ for processing.\nOn success, the HTTP response shall include a \"Location\"\
        \ HTTP header that\ncontains the URI of the newly-created \"Individual VNF\
        \ LCM operation occurrence\"\nresource corresponding to the operation.\nThe\
        \ response body shall be empty.\n"
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfInstance'
    IndividualVnfInstance.Delete.204:
      description: |
        204 NO CONTENT

        Shall be returned when the "Individual VNF instance" resource and the associated
        VNF identifier were deleted successfully.
        The response body shall be empty.
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    InstantiateVnfInstance.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing
        The response body shall be empty.
        The HTTP response shall include a "Location" HTTP header that
        contains the URI of the newly-created "Individual VNF LCM operation
        occurrence" resource corresponding to the operation.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    ScaleVnfInstance.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response body shall be empty.
        The HTTP response shall include a "Location" HTTP header that
        contains the URI of the newly-created "VNF LCM operation
        occurrence" resource corresponding to the operation.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    ScaleToLevelVnfInstance.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response body shall be empty.
        The HTTP response shall include a "Location" HTTP header that
        contains the URI of the newly-created "VNF LCM operation
        occurrence" resource corresponding to the operation.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    ChangeFlavourVnfInstance.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response body shall be empty.
        The HTTP response shall include a "Location" HTTP header that
        contains the URI of the newly-created "VNF LCM operation
        occurrence" resource corresponding to the operation.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    TerminateVnfInstance.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response body shall be empty.
        The HTTP response shall include a "Location" HTTP header that
        contains the URI of the newly-created "VNF LCM operation
        occurrence" resource corresponding to the operation.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    HealVnfInstance.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response body shall be empty.
        The HTTP response shall include a "Location" HTTP header that
        contains the URI of the newly-created "VNF LCM operation
        occurrence" resource corresponding to the operation.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    OperateVnfInstance.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response body shall be empty.
        The HTTP response shall include a "Location" HTTP header that
        contains the URI of the newly-created "VNF LCM operation
        occurrence" resource corresponding to the operation.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    ChangeExtConnVnfInstance.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response body shall be empty.
        The HTTP response shall include a "Location" HTTP header that
        contains the URI of the newly-created "VNF LCM operation
        occurrence" resource corresponding to the operation.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    ChangeVnfpkgVnfInstance.Post.202:
      description: "202 ACCEPTED\n\nShall be returned when the request has been accepted\
        \ for processing.\nThe response body shall be empty.\nThe HTTP response shall\
        \ include a \"Location\" HTTP header that contains the URI of \nthe newly-created\
        \ \"VNF LCM operation occurrence\" resource corresponding to the operation.\n"
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    VnfLcmOpOccs.Get.200:
      description: "200 OK\n\nShall be returned when status information for zero or\
        \ more VNF lifecycle management\noperation occurrences has been queried successfully.\n\
        The response body shall contain in an array the status information about zero\
        \ or more\nVNF lifecycle operation occurrences, as defined in clause 5.5.2.13.\n\
        If the \"filter\" URI parameter or one of the \"all_fields\", \"fields\" (if\
        \ supported),\n\"exclude_fields\" (if supported) or \"exclude_default\" URI\
        \ parameters was supplied in the request,\nthe data in the response body shall\
        \ have been transformed according to the rules specified\nin clauses 5.2.2\
        \ and 5.3.2 of ETSI GS NFV-SOL 013, respectively.\nIf the VNFM supports alternative\
        \ 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013\nfor this\
        \ resource, inclusion of the Link HTTP header in this response shall follow\
        \ the provisions\nin clause 5.4.2.3 of ETSI GS NFV-SOL 013.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
        Link:
          description: "Reference to other resources. Used for paging in the present\
            \ document, see clause 4.7.2.1.\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfLcmOpOcc'
    IndividualVnfLcmOpOcc.Get.200:
      description: |
        200 OK

        Shall be returned when information about a VNF LCM operation occurrence washas been read successfully.
        The response body shall contain status information about a VNF lifecycle management operation occurrence
        (see clause 5.5.2.13).
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfLcmOpOcc'
    RollbackVnfLcmOpOcc.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response shall have an empty payload body.
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    RetryVnfLcmOpOcc.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response shall have an empty payload body.
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    FailVnfLcmOpOcc.Post.200:
      description: "200 OK\n\nShall be returned when the state of the VNF lifecycle\
        \ management operation occurrence\nhas been changed successfully.\nThe response\
        \ bofyshall include a representation of the \"Individual VNF lifecycle operation\
        \ occurrence\" \nresource.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfLcmOpOcc'
    CancelVnfLcmOpOcc.Post.202:
      description: |
        202 ACCEPTED

        Shall be returned when the request has been accepted for processing.
        The response shall have an empty payload body.
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    Subscriptions.Post.201:
      description: |
        201 CREATED

        Shall be returned when the subscription has been created successfully.
        The response body shall contain a representation of the created "Individual subscription" resource.
        The HTTP response shall include a "Location" HTTP header that points to the created
        "Individual subscription" resource.
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LccnSubscription'
    Subscriptions.Get.200:
      description: "200 OK\n\nShall be returned when the list of subscriptions has\
        \ been queried successfully.\nThe response body shall contain in an array\
        \ the representations of all active subscriptions of\nthe functional block\
        \ that invokes the method, i.e. zero or more representations of lifecycle\
        \ change\nnotification subscriptions as defined in clause 5.5.2.16.\nIf the\
        \ \"filter\" URI parameter was supplied in the request, the data in the response\
        \ body shall have been\ntransformed according to the rules specified in clause\
        \ 5.2.2 of ETSI GS NFV-SOL 013.\nIf the VNFM supports alternative 2 (paging)\
        \ according to clause 5.4.7.2.1 of ETSI GS NFV-SOL 013\nfor this resource,\
        \ inclusion of the Link HTTP header in this response shall follow the provisions\n\
        in clause 4.7.2.3.5.4.2.3 of ETSI GS NFV-SOL 013.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
        Link:
          description: "Reference to other resources. Used for paging in the present\
            \ document, see clause 4.7.2.1.\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LccnSubscription'
    IndividualSubscription.Get.200:
      description: |
        200 OK

        Shall be returned when information about an individual subscription has been read successfully.
        The response body shall contain a representation of the "Individual subscription" resource.
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LccnSubscription'
    IndividualSubscription.Delete.204:
      description: |
        204 NO CONTENT

        Shall be returned when the "Individual subscription" resource has been deleted successfully.
        The response body shall be empty.
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    CreateVnfSnapshotTask.Post.202:
      description: "202 ACCEPTED\n\nShall be returned when the request was accepted\
        \ for processing, but the processing \nhas not been completed.\nThe response\
        \ body shall be empty.\nThe HTTP response shall include a \"Location\" HTTP\
        \ header that contains the URI of \nthe newly-created \"VNF LCM operation\
        \ occurrence\" resource corresponding to the operation.\n"
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    RevertToVnfSnapshotTask.Post.202:
      description: "202 ACCEPTED\n\nShall be returned when the request was accepted\
        \ for processing, but the processing has \nnot been completed.\nThe response\
        \ body shall be empty.\nThe HTTP response shall include a \"Location\" HTTP\
        \ header that contains the URI of \nthe newly-created \"VNF LCM operation\
        \ occurrence\" resource corresponding to the operation.\n"
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    VnfSnapshots.Post.201:
      description: "201 CREATED\n\nShall be returned when an \"Individual VNF snapshot\"\
        \ resource has been created \nsuccessfully.\nThe response body shall contain\
        \ a representation of the new \"Individual VNF snapshot\" \nresource, as defined\
        \ in clause 5.5.2.22.\nThe HTTP response shall include a \"Location\" HTTP\
        \ header that contains the resource URI \nof the \"Individual VNF snapshot\"\
        \ resource.\n"
      headers:
        Location:
          description: |
            The resource URI of the created subscription resource.
          style: simple
          explode: false
          schema:
            type: string
            format: url
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfSnapshotInfo'
    VnfSnapshots.Get.200:
      description: "200 OK\n\nShall be returned when information about zero or more\
        \ VNF snapshots was queried successfully.\nThe response body shall contain\
        \ in an array the representations of zero or more \n\"Individual VNF snapshot\"\
        \ resources, as defined in clause 5.5.2.22.\nIf the VNFM supports alternative\
        \ 2 (paging) according to clause 5.4.2.1 of ETSI GS NFV-SOL 013\nfor this\
        \ resource, inclusion of the Link HTTP header in this response shall follow\
        \ the provisions \nin clause 5.4.2.3 of ETSI GS NFV-SOL 013.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
        Link:
          description: "Reference to other resources. Used for paging in the present\
            \ document, see clause 4.7.2.1.\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/VnfSnapshotInfo'
    IndividualVnfSnapshot.Get.200:
      description: "200 OK\n\nShall be returned when information about an individual\
        \ VNF snapshot was read successfully.\nThe response body shall contain a representation\
        \ of the \"Individual VNF snapshot\" resource, \nas defined in clause 5.5.2.22.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/VnfSnapshotInfo'
    IndividualVnfSnapshot.Patch.200:
      description: |
        200 OK

        Shall be returned when the modification of VNF snapshot information has been accepted and completed.
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfSnapshotInfoModifications'
    IndividualVnfSnapshot.Delete.204:
      description: "204 NO CONTENT\n\nShall be returned when the VNF snapshot resource\
        \ and the associated VNF snapshot were \ndeleted successfully.\nThe response\
        \ body shall be empty.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
    IndividualVnfSnapshotState.Get.200:
      description: "200 OK\n\nShall be returned when the whole content of the VNF\
        \ state snapshot file has been read successfully.\n\nThe payload body shall\
        \ contain a copy of the VNF state snapshot file and the \"Content-Type\" HTTP\n\
        header shall be set according to the content type of the VNF state snapshot\
        \ file. If the VNF state \nsnapshot content is encrypted, the header shall\
        \ be set to the value \"application/cms\" (IETF RFC 7193). \n\nIf the content\
        \ type cannot be determined, the header shall be set to the value \"application/octet-stream\"\
        .\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Type:
          description: "The MIME type of the body of the response. Reference: IETF\
            \ RFC 7231\n"
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/*:
          schema:
            type: string
            format: binary
    IndividualVnfSnapshotState.Get.206:
      description: "206 PARTIAL CONTENT\n\nIf the VNFM supports range requests, this\
        \ response shall be returned when a single consecutive byte\nrange from the\
        \ content of the VNF state snapshot file has been read successfully according\
        \ to the request.\n\nThe response body shall contain the requested part of\
        \ the VNF state snapshot file. The \"Content-Type\" HTTP \nheader shall be\
        \ set according to the content type of the VNF state snapshot file. If the\
        \ content type cannot \nbe determined, the header shall be set to the value\
        \ \"application/octet-stream\".\n\nThe \"Content-Range\" HTTP header shall\
        \ be provided according to IETF RFC 7233.\n"
      headers:
        WWW-Authenticate:
          description: "Challenge if the corresponding HTTP request has not provided\
            \ authorization, or error details if the\ncorresponding HTTP request has\
            \ provided an invalid authorization token.\n"
          style: simple
          explode: false
          schema:
            type: string
        Version:
          description: The used API version.
          style: simple
          explode: false
          schema:
            type: string
        Content-Range:
          required: true
          style: simple
          explode: false
          schema:
            type: string
      content:
        application/*:
          schema:
            type: string
            format: binary
  parameters:
    VnfdSpecification:
      name: vnfdSpecification
      in: query
      description: SOL Specification the VNF Descriptor must be in compliance with
      required: true
      style: form
      explode: true
      schema:
        type: string
        default: SOL006
        enum:
        - SOL001
        - SOL006
    VnfInstanceId:
      name: vnfInstanceId
      in: path
      description: "Identifier of the VNF instance for the VNF snapshot to be reverted\
        \ to. This identifier can be retrieved from the resource \nreferenced by the\
        \ \"Location\" HTTP header in the response to a POST request creating a new\
        \ \"Individual VNF instance\" resource. \nIt can also be retrieved from the\
        \ \"id\" attribute in the payload body of that response.\n"
      required: true
      style: simple
      explode: false
      schema:
        type: string
    VnfdId:
      name: vnfdId
      in: path
      required: true
      style: simple
      explode: false
      schema:
        type: string
    VnfLcmOpOccId:
      name: vnfLcmOpOccId
      in: path
      description: |
        Identifier of a VNF lifecycle management operation occurrence. This identifier can be retrieved from the resource
        referenced by the "Location" HTTP header in the response to a PATCH or POST request triggering a VNF LCM operation.
        It can also be retrieved from the "vnfLcmOpOccId" attribute in the VnfLcmOperationOccurrenceNotification.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    vnfLcmOpOccId:
      name: vnfLcmOpOccId
      in: query
      required: false
      style: form
      explode: true
      schema:
        type: string
    vnfInstanceId:
      name: vnfInstanceId
      in: query
      required: false
      style: form
      explode: true
      schema:
        type: string
    SubscriptionId:
      name: subscriptionId
      in: path
      description: |
        Identifier of this subscription. This identifier can be retrieved from the resource referenced by the "Location"
        HTTP header in the response to a POST request creating a new subscription resource. It can also be retrieved from
        the "id" attribute in the payload body of that response.
      required: true
      style: simple
      explode: false
      schema:
        type: string
    VnfSnapshotInfoId:
      name: vnfSnapshotInfoId
      in: path
      description: "Identifier of the \"Individual VNF snapshot\" resource. This identifier\
        \ can be retrieved \nfrom the resource referenced by the \"Location\" HTTP\
        \ header in the response to a POST request \ncreating a new VNF snapshot resource.\
        \ It can also be retrieved from the \"id\" attribute in\nthe payload body\
        \ of that response.        \n"
      required: true
      style: simple
      explode: false
      schema:
        type: string
    Range:
      name: Range
      in: header
      description: "The request may contain a \"Range\" HTTP header to obtain single\n\
        range of bytes from a VNF state snapshot file. This can be used to\ncontinue\
        \ an aborted transmission.\nIf the \"Range\" header is present in the request\
        \ and the VNFM\ndoes not support responding to range requests with a 206\n\
        response, it shall return a 200 OK response instead.\n"
      required: false
      style: simple
      explode: false
      schema:
        type: string
  requestBodies:
    SubscriptionIds:
      description: "List of existing subscription indentifiers. For each subscription\
        \ identifier in the list, are returned the related notifications. An example\
        \ is available below.\n"
      content:
        application/json:
          schema:
            type: object
            properties:
              subscriptionIds:
                type: array
                items:
                  type: string
          example:
            subscriptionIds:
            - 9874d999-e2b7-4415-a2ac-c4df42fdbfcf
            - 1e2eca62-145d-4e97-926c-2bec1559c555
      required: true
    CreateVnfRequest:
      description: The VNF creation parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateVnfRequest'
      required: true
    VnfInfoModificationRequest:
      description: "Parameters for the VNF modification, as defined in clause 5.5.2.12.\n"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfInfoModificationRequest'
      required: true
    InstantiateVnfRequest:
      description: Parameters for the VNF instantiation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/InstantiateVnfRequest'
      required: true
    ScaleVnfRequest:
      description: Parameters for the scale VNF operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScaleVnfRequest'
      required: true
    ScaleVnfToLevelRequest:
      description: Parameters for the scale VNF to Level operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ScaleVnfToLevelRequest'
      required: true
    ChangeVnfFlavourRequest:
      description: Parameters for the Change VNF Flavour operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeVnfFlavourRequest'
      required: true
    TerminateVnfRequest:
      description: Parameters for the VNF termination.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/TerminateVnfRequest'
      required: true
    HealVnfRequest:
      description: Parameters for the Heal VNF operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/HealVnfRequest'
      required: true
    OperateVnfRequest:
      description: Parameters for the Operate VNF operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/OperateVnfRequest'
      required: true
    ChangeExtVnfConnectivityRequest:
      description: |
        Parameters for the Change external VNF connectivity operation.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeExtVnfConnectivityRequest'
      required: true
    ChangeCurrentVnfPkgRequest:
      description: "Parameters for the Change current VNF package operation, as defined\
        \ in clause 5.5.2.11a.\n"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ChangeCurrentVnfPkgRequest'
      required: true
    LccnSubscriptionRequest:
      description: |
        Details of the subscription to be created.
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/LccnSubscriptionRequest'
      required: true
    CreateVnfSnapshotRequest:
      description: "Parameters for the \"Create VNF Snapshot\" operation, as defined\
        \ in clause 5.5.2.21.\n"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateVnfSnapshotRequest'
      required: true
    RevertToVnfSnapshotRequest:
      description: "Parameters for the Revert to VNF snapshot operation, as defined\
        \ in clause 5.5.2.26.\n"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/RevertToVnfSnapshotRequest'
      required: true
    CreateVnfSnapshotInfoRequest:
      description: "The VNF snapshot resource creation parameters, as defined in clause\
        \ 5.5.2.20.\n"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/CreateVnfSnapshotInfoRequest'
      required: true
    VnfSnapshotInfoModificationRequest:
      description: "Parameters for the VNF snapshot information modification, as defined\
        \ in clause 5.5.2.24.\n"
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/VnfSnapshotInfoModificationRequest'
      required: true
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      name: VNF-LCM-KEY
      in: header
      x-apikeyInfoFunc: swagger_server.controllers.authorization_controller.check_ApiKeyAuth